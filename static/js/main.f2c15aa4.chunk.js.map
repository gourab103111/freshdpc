{"version":3,"sources":["components/header/header.jsx","routes/welcome/welcome.jsx","routes/checkDetails/checkDetails.jsx","routes/persionalInfo/persionalInfo.jsx","routes/dontAgree/dontAgree.jsx","routes/favourites/favourites.jsx","routes/selected/selected.jsx","App.js","routes/forwardToPayment/forwardToPayment.jsx","routes/completed/completed.jsx","routes/loginError/loginError.jsx","routes/loginError/loginErrorCustom.jsx","index.js"],"names":["Header","props","useState","showMenu","setShowMenu","className","setClassName","to","sessionStorage","getItem","src","alt","width","height","onClick","setTimeout","token","Welcome","data","jsonLoaded","setjsonLoaded","payment","setPayment","console","log","history","useHistory","displaydata","id","status","length","htmlcontent","JSON","parse","display","link","document","createElement","rel","href","head","appendChild","value","getElementById","innerHTML","i","useEffect","push","query","URLSearchParams","window","location","search","get","undefined","setItem","pathname","creds","username","password","config","method","url","serviceurl","headers","axios","then","response","xml2js","Parser","parseString","err","result","resultData","ObjectKeys","Object","keys","_data","forEach","e","strSessionID","strBookingStatus","catch","error","strFirstName","strLastName","style","paddingLeft","CheckDetails","orgMember","setOrgMember","organization","setOrganzation","organizationManual","setOrganzationManual","isDisabled","setIsDisabled","groups","setGroups","redirect","setRedirect","orgname","orgfilter","customerId","bookingPath","bData","res","str","split","String","GetBookingInfoPSResult","strBookingPath","getOrganizations","path","reqData","_groups","NewDataSet","pdGroups","obj","label","onOrgChange","event","target","strGroupName","htmlFor","type","name","checked","onChange","$event","map","trim","orgfilters","includes","placeholder","disabled","org","bookingId","strBookingPkid","PersionalInfo","discountChecked","setDiscountChecked","termsChecked","setTermsChecked","dTermsChecked","setDTermsChecked","isOpen","setIsOpen","dontRedirect","setDontRedirect","offerName","setOfferName","termsOpen","setTermsOpen","showemailerr","setshowemailerr","emailchanged","setemailchanged","termsData","setTermsData","eEmailVarifyerror","setEmailVarifyerror","useForm","reValidateMode","defaultValues","resolver","context","criteriaMode","shouldFocusError","shouldUnregister","register","handleSubmit","setFocus","errors","formState","setValue","getValues","setError","clearErrors","updatediscount","enrolled","discountdata","discountConfig","a","strEmail","userData","firstName","lastName","email","alternateEmail","verifyEmail","mobile","address","city","state","zipCode","initiationSem","curSchoolYear","initiationYear","strMobileNo","strAltEmail","strInitiationSemester","strCurrentSchoolYear","strInitiationYear","addData","addConfig","stringify","GetAccountAddress_DPCResponse","strAddress","strCity","strState","strZip","getdiscount","getConfig","DPC_GetIsDiscountsResponse","DPC_GetIsDiscountsResult","bConfig","strBookingID","GetSuppliersPSResult","strOfferName","response2","fetchData","altEmailCheck","altEmail","message","matcher","key","match","preventDefault","onSubmit","scrollTo","aData","uData","aConfig","uConfig","required","maxLength","onKeyPress","minLength","pattern","onChangeCapture","onKeyUp","verifyEmailCheck","alignItems","flex","maxWidth","func","marginRight","justifyContent","marginLeft","telephone","test","this","setState","currentschoolyear","currentyear","index","initiationsemester","semester","initiationyear","year","Dialog","open","onClose","innercontent","item","dangerouslySetInnerHTML","__html","textAlign","DontAgree","top","left","Transition","React","forwardRef","ref","Slide","direction","NextArrow","currentSlide","slideCount","PrevArrow","Favourites","isCarouselOpen","setIsCarouselOpen","favourites","setFavourites","errRedirect","setErrRedirect","isLoading","setIsLoading","onlyOne","setonlyOne","presentslide","setPresetslide","selectedsl","selectedSlide","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","settings","slickGoTo","matches","useMediaQuery","selecteddata","parser","favourite","GetRawImagesPSResult","images","string","ele","selected","image","imagesId","fav","newone","CircularProgress","size","_fav","filter","marginBottom","fullScreen","TransitionComponent","zIndex","background","borderRadius","slider","Selected","selectedData","setSelectedData","imageSelectionNo","setImageSelectionNo","redirect1","setRedirect1","pval","setpval","cval","setcval","p","c","nRawImageSelectionNo","submitSelectedImages","cid","pid","selectedImages","Number","cData","pData","strPkid","Emaildata","body","Bodyforpayment","Body","emaildata","Subject","CC","replace","paymenturl","sendemail","SMS_Activation","Sms_messageforpayment","Sms_message","smsdata","sendsms","onCClick","onPClick","paddingTop","margin","ForwardToPayment","setSelectedImages","idata","iconfig","_selectedImages","fontSize","color","alignSelf","Completed","LoginError","LoginErrorCustom","loadJsonFrom","filename","dataname","protocol","localStorage","App","setData","redirectWellcome","setredirectWellcome","errRedirectCustom","setErrRedirectCustom","CustomerId","setCustomerId","rval","removeItem","strToken","strCustomerId","data1","config1","resultData1","ObjectKeys1","strStatus","statusData","statusDat","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f2c15aa4.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./header.css\";\n\nconst Header = (props) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [className, setClassName] = useState(\"side_menu out\");\n  const openMenu = () => {\n    setClassName(\"side_menu in\");\n    setShowMenu(true);\n  };\n  const closeMenu = () => {\n    setClassName(\"side_menu out\");\n    setTimeout(() => {\n      setShowMenu(false);\n    }, 500);\n  };\n  return (\n    <div className=\"header_container\">\n      <Link to={\"/login?token=\"+sessionStorage.getItem(\"token\")}>\n        <img src=\"/logo.png\" alt=\"logo\" />\n      </Link>\n      <img\n        src=\"/threelines.png\"\n        className=\"menu\"\n        width=\"35\"\n        height=\"30\"\n        alt=\"menu\"\n        onClick={openMenu}\n      />\n      {showMenu && (\n        <div className={className}>\n          <span onClick={closeMenu}>\n            <i className=\"fas fa-times\"></i>\n          </span>\n          <h5>Sharing</h5>\n          <span className=\"share\">\n            <i className=\"fas fa-share-alt\"></i>\n          </span>\n          <p>Share your portraits</p>\n        </div>\n      )}\n      {/* header working! */}\n    </div>\n  );\n};\n\nexport default Header;","/* eslint-disable */\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './welcome.css';\nimport '../../BookingStatusLookup.css';\nimport creds from '../../utils/Config.json';\n\n\nimport xml2js from 'xml2js';\n\nconst token = sessionStorage.getItem('token');\n\n\n\n\nconst Welcome = ({ data }) => {\n\n\n  const [fromJson,setfromJson] = useState({\n  });\n\n\n  //Code added By Gourab\nconst loadJsonFrom = async (filename,dataname) => {\n  let res = await axios.get(\n    window.location.protocol + \"/mySettings/\" + filename\n  );\n\n  console.log(dataname);\n  console.log(res);\n\n\n  setfromJson((old)=>{\n    return {\n      dataname: JSON.stringify(res)\n    }\n  });\n\n  sessionStorage.setItem(dataname, JSON.stringify(res));\n  localStorage.setItem(dataname,JSON.stringify(res))\n  return true;\n};\n//Code added By Gourab\n\n  const [jsonLoaded,setjsonLoaded] = useState(false);\n\n  const [payment, setPayment] = useState(false);\n  console.log('this is in the welcome page', data);\n  // const [errRedirect, setErrRedirect] = useState(false);\n  // const [respdata, setRespdata] = useState();\n\n  // var display = true;\n  const history = useHistory();\n  useEffect(() => {\n    if (!sessionStorage.getItem('urltoken')) {\n      history.push('/error');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  \n  useEffect(() => {\n\n\n\n    /*\n    console.log(\"This load once 2\");\n\n    let rval = loadJsonFrom(\"BookingStatusLookup.json\",\"BookingStatusLookup\");\n    if(rval){\n\n      console.log(fromJson[\"BookingStatusLookup\"]);\n      console.log(sessionStorage.getItem(\"BookingStatusLookup\"));\n\n    //  rval =  loadJsonFrom(\"Config.json\",\"Config\");\n      if(rval){\n       \n        rval =  loadJsonFrom(\"EmailSms.json\",\"EmailSms\");\n        if(rval){\n          rval =  loadJsonFrom(\"OrgFilterChapterInfo.json\",\"OrgFilterChapterInfo\");\n          if(rval){\n            rval =  loadJsonFrom(\"TermsAndConditions.json\",\"TermsAndConditions\");\n            setjsonLoaded(true);\n          }\n        }\n      }\n    \n    }\n\n    */\n\n    setjsonLoaded(true);\n\n  }, []);\n\n  useEffect(() => {\n\n    if(jsonLoaded){\n    const query = new URLSearchParams(window.location.search);\n    console.log(sessionStorage.getItem('urltoken'));\n    if (\n      !query.get('token') &&\n      (sessionStorage.getItem('urltoken') === undefined ||\n        sessionStorage.getItem('urltoken') === null)\n    ) {\n      // setErrRedirect(true);\n      return;\n    } else {\n      sessionStorage.setItem('urltoken', query.get('token'));\n    }\n\n\n    if (window.location.pathname === \"/welcome\") {\n      displaydata(\n        sessionStorage.getItem(\"setSessionId\"),\n        sessionStorage.getItem(\"strBookingStatus\")\n      );\n      return;\n    }\n\n    \n\n\n    let data = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Header>\\r\\n    <AuthHeader xmlns=\"http://tempuri.org/\">\\r\\n      <LoginToken>${\n      query.get('token') || token\n    }</LoginToken>\\r\\n      <Username>${\n      creds.username\n    }</Username>\\r\\n      <Password>${\n      creds.password\n    }</Password>\\r\\n    </AuthHeader>\\r\\n  </soap12:Header>\\r\\n  <soap12:Body>\\r\\n    <LoginByToken3 xmlns=\"http://tempuri.org/\" />\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\n    let config = {\n      method: 'post',\n      url: creds.serviceurl,\n      headers: {\n        'Content-Type': 'text/xml; charset=utf-8',\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then((response) => {\n        let parser = new xml2js.Parser();\n        parser.parseString(`${response.data}`, function (err, result) {\n          const resultData =\n            result['soap:Envelope']['soap:Body'][0]['LoginByToken3Response'][0][\n              'LoginByToken3Result'\n            ][0];\n          const ObjectKeys = Object.keys(resultData);\n          let _data = {};\n          ObjectKeys.forEach((e) => {\n            _data[e] = resultData[e][0];\n          });\n          console.log('this is called in the welcome page', _data);\n\n          sessionStorage.setItem(\"setSessionId\", _data.strSessionID);\n          sessionStorage.setItem(\"strBookingStatus\", _data.strBookingStatus);\n\n\n          // setRespdata(_data);\n          displaydata(_data.strSessionID, _data.strBookingStatus);\n          // setData(_data);\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        // setErrRedirect(true);\n      });\n\n    }\n  }, [jsonLoaded]);\n\n  function displaydata(id, status) {\n    if (id.length > 4) {\n      setPayment(true);\n    }\n    if (status) {\n      \n      /*var value = utils[status].htmlcontent;\n      for (let i = 0; i < value.length; i++) {\n        document.getElementById('content').innerHTML += value[i];\n      }*/\n\n      let htmlcontent = sessionStorage.getItem(\"htmlcontent\");\n      if (htmlcontent) {\n        let htmlcontent = JSON.parse(sessionStorage.getItem(\"htmlcontent\"));\n        if (htmlcontent.display === \"on\") {\n          /***  Used To add css dynamickly start  */\n          var link = document.createElement(\"link\");\n          link.id = sessionStorage.getItem(\"strStatus\");\n          link.rel = \"stylesheet\";\n          link.href = \"mySettings/BookingStatusLookup.css\";\n          document.head.appendChild(link);\n\n          /***  Used To add css dynamickly end  */\n\n          var value = htmlcontent.htmlcontent;\n\n          document.getElementById(\"content\").innerHTML = \"\";\n\n          for (let i = 0; i < value.length; i++) {\n            document.getElementById(\"content\").innerHTML += value[i];\n          }\n        }\n      }\n\n\n    }\n    // }\n  }\n\n  if(window.location.pathname===\"/welcome\"){\n\n    \n  }else{\n    return(\n          <>\n           <center>Please wait ......</center>\n          </>\n      );\n  }\n\n  return (\n    <div className='welcome_container'>\n      {/* <button onClick={sendemail}>Send Email</button> */}\n      <h5>\n        Welcome,\n        <br /> {data.strFirstName}&nbsp;{data.strLastName}\n      </h5>\n      <br />\n      {/* {displaydata()} */}\n      <p>\n        Thank you for participating in your recent photography day!\n        <br />\n        You are almost finished.\n      </p>\n\n      <div\n        className='complete_cont'\n        style={{ paddingLeft: '5px' }}\n        id='content'\n      ></div>\n\n      <div className='complete_cont' style={{ paddingLeft: '5px' }}>\n        <p className='complete'>\n          <img src='/tick.png' alt='Tick' />\n          Complete and verify your personal information\n        </p>\n        <p className='complete'>\n          <img src='/tick.png' alt='Tick' />\n          Finalize your pose selection\n        </p>\n        {payment ? (\n          <p className='complete'>\n            <img src='/tick.png' alt='Tick' />\n            Pay your sitting fee, if required\n          </p>\n        ) : (\n          ''\n        )}\n      </div>\n      <br />\n      <Link to='/check-details'>\n        <button>\n          Continue&nbsp;<i className='fas fa-chevron-right'></i>\n          <i className='fas fa-chevron-right'></i>\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Welcome;\n","/* eslint-disable */\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './checkDetails.css';\r\nimport creds from '../../utils/Config.json';\r\n//import orgfilter from '../../utils/OrgFilterChapterInfo.json';\r\nimport xml2js from 'xml2js';\r\n\r\nconst CheckDetails = ({ data }) => {\r\n  const [orgMember, setOrgMember] = useState(null);\r\n  const [organization, setOrganzation] = useState(null);\r\n  const [organizationManual, setOrganzationManual] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [groups, setGroups] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const orgname = sessionStorage.getItem('organization');\r\n\r\n  const response2 = JSON.parse(sessionStorage.getItem(\"OrgFilterChapterInfo\")); \r\n\r\n\r\n  const orgfilter = response2.data;\r\n\r\n  useEffect(() => {\r\n    \r\n    // setorgfilter();\r\n    // console.log(sessionStorage.getItem(\"textvalue\"));\r\n    if (sessionStorage.getItem('radiooption') != null) {\r\n      setIsDisabled(false);\r\n    }\r\n    const customerId = sessionStorage.getItem('customerId');\r\n    setOrgMember(sessionStorage.getItem('radiooption'));\r\n    setOrganzation(sessionStorage.getItem('selectedvalue'));\r\n    setOrganzationManual(\r\n      sessionStorage.getItem('textvalue') == null\r\n        ? ''\r\n        : sessionStorage.getItem('textvalue')\r\n    );\r\n\r\n    let bookingPath = '';\r\n    let bData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <GetBookingInfoPS xmlns=\"http://tempuri.org/\">\\r\\n      <strCustomerId>${customerId}</strCustomerId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n    </GetBookingInfoPS>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n    let config = {\r\n      method: 'post',\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        'Content-Type': 'text/xml; charset=utf-8',\r\n      },\r\n      data: bData,\r\n    };\r\n    axios(config)\r\n      .then((res) => {\r\n        const str = res.data\r\n          .split(\r\n            '<soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><soap:Body><GetBookingInfoPSResponse xmlns=\"http://tempuri.org/\">'\r\n          )[1]\r\n          .split('</GetBookingInfoPSResponse>')[0];\r\n        let parser = new xml2js.Parser();\r\n        parser.parseString(String(str), function (err, result) {\r\n          bookingPath = result.GetBookingInfoPSResult.strBookingPath[0];\r\n          getOrganizations(bookingPath);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getOrganizations = (path) => {\r\n    \r\n    const reqData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\n  <soap12:Body>\\n    <GetGroupName_SP xmlns=\"http://tempuri.org/\">\\n      <strBookingPath>${path}</strBookingPath>\\n    </GetGroupName_SP>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\n  </soap12:Body>\\n</soap12:Envelope>`;\r\n\r\n    const config = {\r\n      method: 'post',\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        'Content-Type': 'text/xml; charset=utf-8',\r\n      },\r\n      data: reqData,\r\n    };\r\n    axios(config)\r\n      .then(function (response) {\r\n        const res = response.data\r\n          .split(\r\n            '<diffgr:diffgram xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\" xmlns:diffgr=\"urn:schemas-microsoft-com:xml-diffgram-v1\">'\r\n          )[1]\r\n          .split('</diffgr:diffgram>')[0];\r\n        console.log(res);\r\n        const parser = new xml2js.Parser();\r\n        parser.parseString(String(res), function (err, result) {\r\n          let _groups = [];\r\n          console.log(result.NewDataSet.pdGroups);\r\n          result.NewDataSet.pdGroups.forEach((e) => {\r\n            const obj = { label: e['Name'][0], value: e['$']['diffgr:id'] };\r\n            _groups.push(obj);\r\n          });\r\n          setGroups(_groups);\r\n          console.log(groups);\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const onOrgChange = (event) => {\r\n    setOrgMember(event.target.value);\r\n    console.log('this is the event', event.target.value);\r\n    setOrganzation(null);\r\n    if (event.target.value === 'Yes') {\r\n      setIsDisabled(false);\r\n    } else {\r\n      setIsDisabled(true);\r\n    }\r\n  };\r\n  const orgManualChange = (event) => {\r\n    console.log(event.target.value);\r\n    setOrganzationManual(event.target.value);\r\n    if (event.target.value) {\r\n      setIsDisabled(false);\r\n    } else {\r\n      setIsDisabled(true);\r\n    }\r\n  };\r\n  const onOrganizationSelect = (event) => {\r\n    if (event.target.value) {\r\n      setOrganzation(event.target.value);\r\n      if (event.target.value === 'notHere') {\r\n        setIsDisabled(true);\r\n      } else {\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n  const token = sessionStorage.getItem('token');\r\n  return (\r\n    <div className='details_container'>\r\n      {redirect && <Redirect to='/persional-info' />}\r\n      <div className='head'>\r\n        <Link to={`/login?token=${token}`}>\r\n          <span>\r\n            <i className='fas fa-chevron-left'></i>&nbsp;Back\r\n          </span>\r\n        </Link>\r\n        <h5>Group Information</h5>\r\n        <div></div>\r\n      </div>\r\n      <div className='body'>\r\n        <h6>Organization</h6>\r\n        <p>Are you a member of the following Organization?</p>\r\n        <p className='default'>{data.strGroupName}</p>\r\n        <form>\r\n          <label htmlFor='org_yes'>\r\n            <input\r\n              type='radio'\r\n              id='org_yes'\r\n              name='organization'\r\n              value='Yes'\r\n              checked={orgMember === 'Yes' ? true : false}\r\n              onChange={($event) => onOrgChange($event)}\r\n            />\r\n            <span></span>\r\n            Yes, this is my group\r\n          </label>\r\n          <br />\r\n          <label htmlFor='org_no'>\r\n            <input\r\n              type='radio'\r\n              id='org_no'\r\n              name='organization'\r\n              value='No'\r\n              checked={orgMember === 'No' ? true : false}\r\n              onChange={($event) => onOrgChange($event)}\r\n            />\r\n            <span></span>\r\n            No, I’m a member of a different group\r\n          </label>\r\n          {orgMember === 'No' ? (\r\n            <div className='select_manually'>\r\n              <h6>Select Your Organization</h6>\r\n              {organization !== 'notHere' ? (\r\n                <select\r\n                  name='organization'\r\n                  value={organization}\r\n                  onChange={($event) => onOrganizationSelect($event)}\r\n                >\r\n                  <option>Select Your Organization</option>\r\n                  {groups.map((e) => {\r\n                    if (e.label.trim().length) {\r\n                      if (orgfilter.orgfilters.includes(e.label.trim())) {\r\n                        return '';\r\n                      } else\r\n                        return (\r\n                          <option key={e.value} value={e.label}>\r\n                            {e.label}\r\n                          </option>\r\n                        );\r\n                    }\r\n                    return null;\r\n                  })}\r\n                  <option value='notHere'>My Organization isn't here</option>\r\n                </select>\r\n              ) : (\r\n                <input\r\n                  type='text'\r\n                  value={organizationManual}\r\n                  placeholder='Enter Organization'\r\n                  onChange={($event) => orgManualChange($event)}\r\n                />\r\n              )}\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <br />\r\n          {/* <Link to=\"/persional-info\"> */}\r\n          <button\r\n            disabled={isDisabled}\r\n            onClick={() => {\r\n              const org =\r\n                orgMember === 'Yes'\r\n                  ? orgname !== null && orgname.length > 1\r\n                    ? orgname\r\n                    : data.strGroupName\r\n                  : organization !== 'notHere'\r\n                  ? organization\r\n                  : organizationManual;\r\n              sessionStorage.setItem('organization', org);\r\n\r\n              sessionStorage.setItem('radiooption', orgMember);\r\n              sessionStorage.setItem('selectedvalue', organization);\r\n              sessionStorage.setItem('textvalue', organizationManual);\r\n\r\n              setRedirect(true);\r\n            }}\r\n          >\r\n            Continue&nbsp;<i className='fas fa-chevron-right'></i>\r\n            <i className='fas fa-chevron-right'></i>\r\n          </button>\r\n          {/* </Link> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckDetails;\r\n","/* eslint-disable */\r\nimport { Dialog } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport xml2js from 'xml2js';\r\nimport './persionalInfo.css';\r\nimport creds from '../../utils/Config.json';\r\n//import orgfilter from '../../utils/OrgFilterChapterInfo.json';\r\n\r\nlet bookingPath = '';\r\nlet bookingId = '';\r\nlet strBookingPkid = '';\r\n\r\nconst PersionalInfo = ({ data }) => {\r\n  // console.log(\"this is in the starting\",data);\r\n  const [discountChecked, setDiscountChecked] = useState(false);\r\n  const [termsChecked, setTermsChecked] = useState(false);\r\n  // const [dDiscountChecked, setDDiscountChecked] = useState(false);\r\n  const [dTermsChecked, setDTermsChecked] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [dontRedirect, setDontRedirect] = useState(false);\r\n  const [offerName, setOfferName] = useState('');\r\n  const [termsOpen, setTermsOpen] = useState(false);\r\n  const [showemailerr, setshowemailerr] = useState(false);\r\n  const [emailchanged, setemailchanged] = useState(false);\r\n  const [termsData, setTermsData] = useState();\r\n  const [eEmailVarifyerror, setEmailVarifyerror] = useState(false);\r\n  \r\n  // const [creds, setCreds] = useState();\r\n  // const [orgfilter, setOrgfilter] = useState();\r\n  \r\n  const response2 = JSON.parse(sessionStorage.getItem(\"OrgFilterChapterInfo\")); \r\n\r\n\r\n  const orgfilter = response2.data;\r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setFocus,\r\n    formState: { errors },\r\n    setValue,\r\n    getValues,\r\n    setError,\r\n    clearErrors,\r\n  } = useForm({\r\n    // mode: \"onSubmit\",\r\n    reValidateMode: 'onChange',\r\n    defaultValues: {},\r\n    resolver: undefined,\r\n    context: undefined,\r\n    criteriaMode: 'firstError',\r\n    shouldFocusError: true,\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    const response2 = JSON.parse(sessionStorage.getItem(\"TermsAndConditions\")); \r\n    setTermsData(response2.data);\r\n\r\n   /* fetch('./mySettings/TermsAndConditions.json')\r\n      .then((res) => res.json())\r\n      .then((data) => setTermsData(data));\r\n      */\r\n\r\n    //   fetch('./mySettings/Config.json')\r\n    //     .then((res) => res.json())\r\n    //     .then((data) => setCreds(data));\r\n\r\n    //   fetch('./mySettings/OrgFilterChapterInfo.json')\r\n    //     .then((res) => res.json())\r\n    //     .then((data) => setOrgfilter(data));\r\n  }, []);\r\n\r\n  // function getyear() {\r\n  //   var result = [];\r\n  //   var date = new Date();\r\n  //   for (var i = 5; i >= 0; i--) {\r\n  //     result.push(\r\n  //       <option value={date.getFullYear() - i}>{date.getFullYear() - i}</option>\r\n  //     );\r\n  //   }\r\n  //   return result;\r\n  // }\r\n\r\n  // function checkvemail(event) {\r\n  //   if (event.target.value === \"\") {\r\n  //     setFocus(\"mobile\");\r\n  //   }\r\n  // }\r\n\r\n  function onHandleTelephoneChange(e) {\r\n    let telephone = e.target.value;\r\n    let regexp = /^[0-9\\b]+$/;\r\n\r\n    // if value is not blank, then test the regex\r\n    if (telephone === '' || regexp.test(telephone)) {\r\n      this.setState({ [e.target.name]: telephone });\r\n    }\r\n  }\r\n\r\n  function updatediscount(enrolled) {\r\n    const customerId = sessionStorage.getItem('customerId');\r\n    let discountdata = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\r\n    <soap12:Body>\r\n      <DPC_SetIsDiscounts xmlns=\"http://tempuri.org/\">\r\n        <strNameId>${customerId}</strNameId>\r\n        <strBookingPath>${bookingPath}</strBookingPath>\r\n        <IsDiscounts>${enrolled}</IsDiscounts>\r\n      </DPC_SetIsDiscounts>\r\n    </soap12:Body>\r\n  </soap12:Envelope>`;\r\n    let discountConfig = {\r\n      method: 'post',\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        'Content-Type': 'text/xml; charset=utf-8',\r\n      },\r\n      data: discountdata,\r\n    };\r\n    axios(discountConfig).then(function (response) {\r\n      console.log('Printing the testing part', response);\r\n    });\r\n  }\r\n\r\n  async function fetchData() {\r\n    console.log('this is the data from personal', data);\r\n    if (data) {\r\n      data.strEmail ? setemailchanged(false) : setemailchanged(true);\r\n    }\r\n    const customerId = sessionStorage.getItem('customerId');\r\n    const userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    console.log('this is userdata', userData);\r\n    if (userData) {\r\n      setValue('firstName', userData.firstName);\r\n      setValue('lastName', userData.lastName);\r\n      setValue('email', userData.email);\r\n      setValue('alternateEmail', userData.alternateEmail);\r\n      setValue('verifyEmail', userData.verifyEmail);\r\n      setValue('mobile', userData.mobile);\r\n      setValue('address', userData.address);\r\n      setValue('city', userData.city);\r\n      setValue('state', userData.state);\r\n      setValue('zipCode', userData.zipCode);\r\n      setValue('initiationSem', userData.initiationSem);\r\n      setValue('curSchoolYear', userData.curSchoolYear);\r\n      setValue('initiationYear', userData.initiationYear);\r\n    } else {\r\n      if (data) {\r\n        setValue('firstName', data.strFirstName);\r\n        setValue('lastName', data.strLastName);\r\n        setValue('email', data.strEmail);\r\n        setValue('mobile', data.strMobileNo);\r\n        setValue('alternateEmail', data.strAltEmail);\r\n        setValue('initiationSem', data.strInitiationSemester);\r\n        setValue('curSchoolYear', data.strCurrentSchoolYear);\r\n        setValue('initiationYear', data.strInitiationYear);\r\n      }\r\n\r\n      let addData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <GetAccountAddress_DPC xmlns=\"http://tempuri.org/\">\\r\\n      <strNameId>${customerId}</strNameId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n    </GetAccountAddress_DPC>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n      let addConfig = {\r\n        method: 'post',\r\n        url: creds.serviceurl,\r\n        headers: {\r\n          'Content-Type': 'text/xml; charset=utf-8',\r\n        },\r\n        data: addData,\r\n      };\r\n      await axios(addConfig)\r\n        .then(function (response) {\r\n          console.log(JSON.stringify(response.data));\r\n          const str = response.data\r\n            .split(\r\n              // eslint-disable-next-line no-useless-escape\r\n              `<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><soap:Envelope xmlns:soap=\\\"http://www.w3.org/2003/05/soap-envelope\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><soap:Body>`\r\n            )[1]\r\n            .split(`</soap:Body>`)[0];\r\n          let parser = new xml2js.Parser();\r\n          parser.parseString(String(str), function (err, result) {\r\n            console.log(result);\r\n            const data = result.GetAccountAddress_DPCResponse;\r\n            setValue('address', data.strAddress[0]);\r\n            setValue('city', data.strCity[0]);\r\n            setValue('state', data.strState[0]);\r\n            setValue('zipCode', data.strZip[0]);\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    let getdiscount = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <DPC_GetIsDiscounts xmlns=\"http://tempuri.org/\">\\r\\n      <strNameId>${customerId}</strNameId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n    </DPC_GetIsDiscounts>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n\r\n    let getConfig = {\r\n      method: 'post',\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        'Content-Type': 'text/xml; charset=utf-8',\r\n      },\r\n      data: getdiscount,\r\n    };\r\n    await axios(getConfig)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        const str = response.data\r\n          .split(\r\n            // eslint-disable-next-line no-useless-escape\r\n            `<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><soap:Envelope xmlns:soap=\\\"http://www.w3.org/2003/05/soap-envelope\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><soap:Body>`\r\n          )[1]\r\n          .split(`</soap:Body>`)[0];\r\n        let parser = new xml2js.Parser();\r\n        parser.parseString(String(str), function (err, result) {\r\n          const data = result.DPC_GetIsDiscountsResponse;\r\n          console.log('this is the value', data.DPC_GetIsDiscountsResult[0]);\r\n          setDiscountChecked(\r\n            data.DPC_GetIsDiscountsResult[0] === 'true' ? true : false\r\n          );\r\n          // setDDiscountChecked(\r\n          //   data.DPC_GetIsDiscountsResult[0] === 'true' ? true : false\r\n          // );\r\n          // setValue(\"address\", data.DPC_GetIsDiscountsResult[0]);\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    let bData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <GetBookingInfoPS xmlns=\"http://tempuri.org/\">\\r\\n      <strCustomerId>${customerId}</strCustomerId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n    </GetBookingInfoPS>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n    let bConfig = {\r\n      method: 'post',\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        'Content-Type': 'text/xml; charset=utf-8',\r\n      },\r\n      data: bData,\r\n    };\r\n    await axios(bConfig)\r\n      .then((res) => {\r\n        const str = res.data\r\n          .split(\r\n            '<soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><soap:Body><GetBookingInfoPSResponse xmlns=\"http://tempuri.org/\">'\r\n          )[1]\r\n          .split('</GetBookingInfoPSResponse>')[0];\r\n        let parser = new xml2js.Parser();\r\n        parser.parseString(String(str), function (err, result) {\r\n          bookingPath = result.GetBookingInfoPSResult.strBookingPath[0];\r\n          bookingId = result.GetBookingInfoPSResult.strBookingID[0];\r\n          strBookingPkid = result.GetBookingInfoPSResult.strBookingPkid[0];\r\n          sessionStorage.setItem('bookingPath', bookingPath);\r\n          sessionStorage.setItem('bookingId', bookingId);\r\n          sessionStorage.setItem('strBookingPkid', strBookingPkid);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // const customerId = sessionStorage.getItem(\"customerId\");\r\n    var reqData = `<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\\r\\n  <soap:Body>\\r\\n    <GetSuppliersPS xmlns=\"http://tempuri.org/\">\\r\\n      <strCustomerId>${customerId}</strCustomerId>\\r\\n      <strFkBookingId>${strBookingPkid}</strFkBookingId>\\r\\n    </GetSuppliersPS>\\r\\n  </soap:Body>\\r\\n</soap:Envelope>`;\r\n\r\n    var config = {\r\n      method: 'post',\r\n      url: 'https://www.aussieschoolphoto.com/pixeladminWS/service1.asmx',\r\n      headers: {\r\n        'Content-Type': 'text/xml; charset=utf-8',\r\n      },\r\n      data: reqData,\r\n    };\r\n\r\n    await axios(config)\r\n      .then(function (response) {\r\n        const str = response.data\r\n          .split(\r\n            // eslint-disable-next-line no-useless-escape\r\n            `<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><soap:Body><GetSuppliersPSResponse xmlns=\\\"http://tempuri.org/\\\">`\r\n          )[1]\r\n          .split('</GetSuppliersPSResponse>')[0];\r\n        const parser = new xml2js.Parser();\r\n        parser.parseString(String(str), function (err, result) {\r\n          const offerName =\r\n            result.GetSuppliersPSResult.strOfferName[0].split(' ')[0];\r\n          console.log('this is offername', offerName);\r\n          setOfferName(offerName);\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  const verifyEmailCheck = (value) => {\r\n    const email = getValues('email');\r\n    const verifyEmail = getValues('verifyEmail');\r\n\r\n    \r\n    if (email && verifyEmail !== email && !showemailerr) {\r\n      setError('verifyEmail', {\r\n        type: 'manual',\r\n        message: 'Email and Verify email should be same',\r\n      });\r\n    \r\n       setEmailVarifyerror(true);\r\n     \r\n    } else {\r\n      setEmailVarifyerror(false);\r\n      clearErrors('verifyEmail');\r\n      console.log('this is verify email');\r\n    }\r\n  };\r\n\r\n  const altEmailCheck = (value) => {\r\n    const email = getValues('email');\r\n    const altEmail = getValues('alternateEmail');\r\n    if (email && altEmail === email) {\r\n      setError('alternateEmail', {\r\n        type: 'manual',\r\n        message:\r\n          offerName && offerName === 'Greek'\r\n            ? \"Email and Parent's email should not be same\"\r\n            : 'Email and Alternate email should not be same',\r\n      });\r\n    } else {\r\n      clearErrors('alternateEmail');\r\n      console.log('this is verify email');\r\n    }\r\n  };\r\n\r\n  const matcher = (event) => {\r\n    const allowedRegex = /[0-9]/g;\r\n    if (!event.key.match(allowedRegex)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='info_container'>\r\n      {redirect && <Redirect to='/favourites' />}\r\n      {dontRedirect && <Redirect to='/dont-agree' />}\r\n      <div className='head'>\r\n        <Link to='/check-details'>\r\n          <span>\r\n            <i className='fas fa-chevron-left'></i>&nbsp;Back\r\n          </span>\r\n        </Link>\r\n        <h5 className='boldfont'>Your Information</h5>\r\n        <div></div>\r\n      </div>\r\n      <div className='body'>\r\n        <h6 className='boldfont'>\r\n          Please review the following personal information, make any edits, and\r\n          continue to save.\r\n        </h6>\r\n        <p>* Required information</p>\r\n        <form\r\n          onSubmit={handleSubmit(async (data) => {\r\n            // setFocus(\"email\");\r\n            // return;\r\n            console.log('Thi is email', data.email);\r\n            console.log('Thi is verify email', getValues(\"verifyEmail\"));\r\n            \r\n            console.log(\r\n              `this is the data verifyemail - ${!data.verifyEmail}, email length - ${!data\r\n                .email.length}, Is email changed? ${emailchanged}`\r\n            );\r\n\r\n            \r\n             if(getValues(\"verifyEmail\").length>=1 && getValues(\"verifyEmail\")!==data.email){\r\n\r\n            //  window.scrollTo(0, 100);\r\n  setError('verifyEmail', {\r\n                type: 'required',\r\n                message: 'Email and Verify email should be same',\r\n              });\r\n\r\n              setFocus('lastName');\r\n              setFocus('verifyEmail');\r\n             \r\n              return;\r\n             }\r\n          \r\n\r\n            if (!data.verifyEmail && emailchanged) {\r\n             // window.scrollTo(0, 300);\r\n              setError('verifyEmail', {\r\n                type: 'required',\r\n                message: 'Verify Email is required',\r\n              });\r\n              setFocus('lastName');\r\n              setFocus('verifyEmail');\r\n              return;\r\n            }\r\n            if (\r\n              data.email !== data.verifyEmail &&\r\n              !data.email.length &&\r\n              emailchanged\r\n            ) {\r\n              setshowemailerr(true);\r\n             // window.scrollTo(0, 300);\r\n             setFocus('lastName');\r\n             setFocus('verifyEmail');\r\n            \r\n              return;\r\n            }\r\n            if (data.alternateEmail === data.email) {\r\n              window.scrollTo(0, 300);\r\n              setError('alternateEmail', {\r\n                type: 'manual',\r\n                message: 'Alternate Email and Email should not be same',\r\n              });\r\n              setFocus('alternateEmail');\r\n              return;\r\n            }\r\n            sessionStorage.setItem('userData', JSON.stringify(data));\r\n            if (!termsChecked) {\r\n              setTermsOpen(true);\r\n              return;\r\n            }\r\n            sessionStorage.setItem('userData', JSON.stringify(data));\r\n            // const token = sessionStorage.getItem('token');\r\n            const customerId = sessionStorage.getItem('customerId');\r\n            const organization = sessionStorage.getItem('organization');\r\n\r\n            let aData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <DPC_UpdateAddress xmlns=\"http://tempuri.org/\">\\r\\n      <strNameId>${customerId}</strNameId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <strAddress>${data.address}</strAddress>\\r\\n      <strCity>${data.city}</strCity>\\r\\n      <strZip>${data.zipCode}</strZip>\\r\\n      <strState>${data.state}</strState>\\r\\n      <strBookingPath>${bookingPath}</strBookingPath>\\r\\n    </DPC_UpdateAddress>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n\r\n            let uData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <DPC_UpdateAccountWeb2 xmlns=\"http://tempuri.org/\">\\r\\n      <accountUpdate>\\r\\n        <strFirstName>${data.firstName}</strFirstName>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n        <strLastName2>${data.lastName}</strLastName2>\\r\\n        <strStudentId>${customerId}</strStudentId>\\r\\n        <strGroup>${organization}</strGroup>\\r\\n        <strEmail>${data.email}</strEmail>\\r\\n        <strAltEmail>${data.alternateEmail}</strAltEmail>\\r\\n        <strCellPhoneNo>${data.mobile}</strCellPhoneNo>\\r\\n        <strBookingPath>${bookingPath}</strBookingPath>\\r\\n        <strBookingId>${bookingId}</strBookingId>\\r\\n        <strSqlUpdate>string</strSqlUpdate>\\r\\n        <strMasterBookingUpdate>string</strMasterBookingUpdate>\\r\\n <strCurrentSchoolYear>${data.curSchoolYear}</strCurrentSchoolYear>\\r\\n  <strInitiationSemester>${data.initiationSem}</strInitiationSemester>\\r\\n  <strInitiationYear>${data.initiationYear}</strInitiationYear>\\r\\n   <IsAttached>true</IsAttached>\\r\\n        <strNotes>string</strNotes>\\r\\n      </accountUpdate>\\r\\n    </DPC_UpdateAccountWeb2>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n            let aConfig = {\r\n              method: 'post',\r\n              url: creds.serviceurl,\r\n              headers: {\r\n                'Content-Type': 'text/xml; charset=utf-8',\r\n              },\r\n              data: aData,\r\n            };\r\n            let uConfig = {\r\n              method: 'post',\r\n              url: creds.serviceurl,\r\n              headers: {\r\n                'Content-Type': 'text/xml; charset=utf-8',\r\n              },\r\n              data: uData,\r\n            };\r\n            axios(aConfig)\r\n              .then(function (response) {\r\n                console.log(JSON.stringify(response.data));\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n            axios(uConfig)\r\n              .then(function (response) {\r\n                console.log(JSON.stringify(response.data));\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n            // sessionStorage.removeItem(\"userData\");\r\n            if(!eEmailVarifyerror)// When user Enter Email id and it not matched\r\n            setRedirect(true);\r\n          })}\r\n        >\r\n          <div className='name'>\r\n            <h6>Name</h6>\r\n            <p className='boldfont'>\r\n              This is EXACTLY how your Name will appear on the Composite.\r\n            </p>\r\n            <div className='form_field'>\r\n              <label htmlFor='f_name'>\r\n                First Name <sup>*</sup>\r\n              </label>\r\n              <div className='input_err'>\r\n                <input\r\n                  className={errors.firstName ? 'inperror' : ''}\r\n                  type='text'\r\n                  id='f_name'\r\n                  {...register('firstName', {\r\n                    required: 'First Name is required',\r\n                  })}\r\n                />\r\n                {errors.firstName && (\r\n                  <span className='error'>{errors.firstName.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className='form_field'>\r\n              <label htmlFor='l_name'>\r\n                Last Name <sup>*</sup>\r\n              </label>\r\n              <div className='input_err'>\r\n                <input\r\n                  className={errors.lastName ? 'inperror' : ''}\r\n                  type='text'\r\n                  id='l_name'\r\n                  {...register('lastName', {\r\n                    required: 'Last Name is required',\r\n                  })}\r\n                />\r\n                {errors.lastName && (\r\n                  <span className='error'>{errors.lastName.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='contact'>\r\n            <h6>Contact</h6>\r\n            <p className='boldfont'>\r\n              Receive SMS notifications and emails to view and order your\r\n              photos.\r\n            </p>\r\n            <div className='form_field'>\r\n              <label htmlFor='mobile'>\r\n                Cell Phone <sup>*</sup>\r\n              </label>\r\n              <div className='input_err'>\r\n                <input\r\n                  className={errors.mobile ? 'inperror' : ''}\r\n                  type='text'\r\n                  maxLength='10'\r\n                  id='mobile'\r\n                  onKeyPress={($event) => matcher($event)}\r\n                  {...register('mobile', {\r\n                    required: 'Phone Number is required',\r\n                    maxLength: {\r\n                      value: 10,\r\n                      message: 'Phone number must not exceed 10 digits',\r\n                    },\r\n                    minLength: {\r\n                      value: 10,\r\n                      message: 'Phone number must be atleast 10 digits',\r\n                    },\r\n                    pattern: {\r\n                      value: /^[0-9]+$/,\r\n\r\n                      message: 'Phone number should contain numbers only',\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.mobile && (\r\n                  <span className='error'>{errors.mobile.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className='form_field'>\r\n              <label htmlFor='email'>\r\n                Email <sup>*</sup>\r\n              </label>\r\n              <div className='input_err'>\r\n                <input\r\n                  className={errors.email ? 'inperror' : ''}\r\n                  type='text'\r\n                  onChangeCapture={() => {\r\n                    setemailchanged(true);\r\n                    console.log('this is changed');\r\n                  }}\r\n                  id='email'\r\n                  {...register('email', {\r\n                    required: 'Email is required',\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: 'Not a valid email',\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.email && (\r\n                  <span className='error'>{errors.email.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className='form_field'>\r\n              <label htmlFor='v_email'>\r\n                Verify Email<sup>*</sup>\r\n              </label>\r\n              <div className='input_err'>\r\n                <input\r\n                  className={errors.verifyEmail ? 'inperror' : ''}\r\n                  type='text'\r\n                  id='v_email'\r\n                  onKeyUp={(event) =>{ \r\n                    verifyEmailCheck(event.target.value);\r\n                    if(event.target.value.length===0)\r\n                    setEmailVarifyerror(false);\r\n                  \r\n                  }}\r\n                  {...register('verifyEmail')}\r\n                />\r\n                {errors.verifyEmail && (\r\n                  <span className='error'>{errors.verifyEmail.message}</span>\r\n                )}\r\n                {showemailerr === true ? (\r\n                  <span className='error'>\r\n                    Email and Verify email should be same\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className='form_field'>\r\n              <label htmlFor='a_email'>\r\n                {offerName && offerName === 'Greek'\r\n                  ? \"Parent's Email\"\r\n                  : 'Alt Email'}\r\n                {offerName && offerName === 'Greek' ? <sup>*</sup> : ''}\r\n              </label>\r\n              <div className='input_err'>\r\n                {offerName && offerName === 'Grad' ? (\r\n                  <input\r\n                    className={errors.alternateEmail ? 'inperror' : ''}\r\n                    type='text'\r\n                    id='a_email'\r\n                    onKeyUp={($event) => altEmailCheck($event.target.value)}\r\n                    {...register('alternateEmail', {\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: 'Not a valid email for now',\r\n                      },\r\n                    })}\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    className={errors.alternateEmail ? 'inperror' : ''}\r\n                    type='text'\r\n                    id='a_email'\r\n                    onKeyUp={($event) => altEmailCheck($event.target.value)}\r\n                    {...register('alternateEmail', {\r\n                      // required: \"Parent's Email is required\",\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: 'Not a valid email',\r\n                      },\r\n                    })}\r\n                  />\r\n                )}\r\n                {errors.alternateEmail && (\r\n                  <span className='error'>{errors.alternateEmail.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='address'>\r\n            <h6>Address</h6>\r\n            <p className='boldfont'>\r\n              Provide your permanent home address. School address is not\r\n              accepted.\r\n            </p>\r\n            <div className='form_field'>\r\n              <label htmlFor='add'>\r\n                Address <sup>*</sup>\r\n              </label>\r\n              <div className='input_err'>\r\n                <input\r\n                  className={errors.address ? 'inperror' : ''}\r\n                  type='text'\r\n                  id='add'\r\n                  {...register('address', { required: 'Address is required' })}\r\n                />\r\n                {errors.address && (\r\n                  <span className='error'>{errors.address.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className='form_field'>\r\n              <label htmlFor='city'>\r\n                City <sup>*</sup>\r\n              </label>\r\n              <div className='input_err'>\r\n                <input\r\n                  className={errors.city ? 'inperror' : ''}\r\n                  type='text'\r\n                  id='city'\r\n                  {...register('city', { required: 'City is required' },)}\r\n                />\r\n                {errors.city && (\r\n                  <span className='error'>{errors.city.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className='form_field'>\r\n              <label htmlFor='state'>\r\n                State <sup>*</sup>\r\n              </label>\r\n              <div\r\n                className='state'\r\n                style={{\r\n                  width: '370px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <div\r\n                  className='input_err'\r\n                  style={{ flex: 1, maxWidth: '160px' }}\r\n                >\r\n                  <input\r\n                    className={errors.state || errors.func ? 'inperror' : ''}\r\n                    style={{\r\n                      marginRight: '10px',\r\n                      width: 'calc(90% - 10px)',\r\n                    }}\r\n                    {...register('state', { required: 'State is required' })}\r\n                    // >\r\n                    //   <option value=\"\">Select</option>\r\n                    //   <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                    //   <option value=\"Telengana\">Telengana</option>\r\n                    //   <option value=\"Tamilnadu\">Tamilnadu</option>\r\n                    //   <option value=\"Karnataka\">Karnataka</option>\r\n                    //   <option value=\"Kerala\">Kerala</option>\r\n                  />\r\n                  {errors.func && (\r\n                    <span className='error'> {errors.func.message}</span>\r\n                  )}\r\n                  {errors.state && (\r\n                    <span className='error'>{errors.state.message}</span>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <label htmlFor='zip' style={{ marginLeft: 0, width: '87px' }}>\r\n                    Zip Code <sup>*</sup>\r\n                  </label>\r\n                  <div className='input_err'>\r\n                    <input\r\n                      className={errors.zipCode ? 'inperror' : ''}\r\n                      type='text'\r\n                      maxLength='5'\r\n                      onChange={onHandleTelephoneChange}\r\n                      onKeyPress={($event) => matcher($event)}\r\n                      style={{ width: '100px', marginLeft: '10px' }}\r\n                      {...register('zipCode', {\r\n                        required: 'Zipcode is required',\r\n                        maxLength: {\r\n                          value: 5,\r\n                          message: 'Zipcode must be 5 characters',\r\n                        },\r\n                        minLength: {\r\n                          value: 5,\r\n                          message: 'Zipcode must be 5 characters',\r\n                        },\r\n                        pattern: {\r\n                          value: /^[0-9]+$/,\r\n                          message: 'Zipcode should contain numbers only',\r\n                        },\r\n                      })}\r\n                    />\r\n                    {errors.zipCode && (\r\n                      <span className='error'>{errors.zipCode.message}</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {offerName && offerName === 'Greek' && (\r\n            <div className='contact'>\r\n              <h6>Chapter Information</h6>\r\n              <p className='boldfont'>\r\n                Tell us your school year, initiation semester, and initiation\r\n                year.\r\n              </p>\r\n              <div className='form_field'>\r\n                <label htmlFor='s_year'>\r\n                  Current School Year <sup>*</sup>\r\n                </label>\r\n                <div className='input_err'>\r\n                  <select\r\n                    className={errors.curSchoolYear ? 'inperror' : ''}\r\n                    {...register('curSchoolYear', {\r\n                      required: 'Current School Year is required',\r\n                    })}\r\n                  >\r\n                    <option value=''>Select</option>\r\n                    {orgfilter.currentschoolyear.map((currentyear, index) => {\r\n                      return (\r\n                        <option value={currentyear} key={index}>\r\n                          {currentyear}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {errors.curSchoolYear && (\r\n                    <span className='error'>\r\n                      {errors.curSchoolYear.message}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className='form_field'>\r\n                <label htmlFor='i_sem'>\r\n                  Initiation Semester <sup>*</sup>\r\n                </label>\r\n                <div className='input_err'>\r\n                  <select\r\n                    className={errors.curSchoolYear ? 'inperror' : ''}\r\n                    {...register('initiationSem', {\r\n                      required: 'Initiation Semister is required',\r\n                    })}\r\n                  >\r\n                    <option value=''>Select</option>\r\n                    {orgfilter.initiationsemester.map((semester, index) => {\r\n                      return (\r\n                        <option value={semester} key={index}>\r\n                          {semester}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {errors.initiationSem && (\r\n                    <span className='error'>\r\n                      {errors.initiationSem.message}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className='form_field'>\r\n                <label htmlFor='i_year'>Initiation Year</label>\r\n                <div className='input_err'>\r\n                  <select\r\n                    className={errors.initiationYear ? 'inperror' : ''}\r\n                    {...register('initiationYear', {})}\r\n                  >\r\n                    <option value=''>Select</option>\r\n                    {orgfilter.initiationyear.map((year, index) => {\r\n                      return (\r\n                        <option value={year} key={index}>\r\n                          {year}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {errors.initiationYear && (\r\n                    <span className='error'>\r\n                      {errors.initiationYear.message}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className='discount'>\r\n            <span>!</span>\r\n            <img\r\n              src={\r\n                discountChecked\r\n                  ? '/images/box_checked1.svg'\r\n                  : '/images/box1.svg'\r\n              }\r\n              width='23'\r\n              height='23'\r\n              alt='check'\r\n              onClick={() => {\r\n                updatediscount(!discountChecked);\r\n                setDiscountChecked(!discountChecked);\r\n              }}\r\n            />\r\n            Get discounts! Sign up now and receive an exclusive coupon when your\r\n            proof is ready.\r\n          </div>\r\n          <div className='terms'>\r\n            <span>!</span>\r\n            <img\r\n              src={\r\n                termsChecked ? '/images/box_checked2.svg' : '/images/box2.svg'\r\n              }\r\n              width='23'\r\n              height='23'\r\n              alt='checked'\r\n              onClick={() => setTermsChecked(!termsChecked)}\r\n            />\r\n            <p>\r\n              I accept the&nbsp;{' '}\r\n              {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n              <a onClick={() => setIsOpen(true)}>Terms & Conditions</a>&nbsp; to\r\n              choose my pose and appear on the composite.\r\n            </p>\r\n          </div>\r\n          <br />\r\n          <button type='submit'  onClick={(e)=>{\r\n                \r\n                const city = getValues('city');\r\n\r\n                \r\n                if(city.length===0){\r\n                  console.log(\"Debug City\");\r\n                  setFocus(\"city\");\r\n                  window.scrollTo(0, 800);\r\n                     }\r\n\r\n          }}>\r\n            Continue&nbsp;<i className='fas fa-chevron-right'></i>\r\n            <i className='fas fa-chevron-right'></i>\r\n          </button>\r\n        </form>\r\n        <Dialog\r\n          className='dialog mobilViewDialog'\r\n          open={isOpen}\r\n          onClose={() => setIsOpen(false)}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'\r\n        >\r\n          <div className='dialog_contaa'>\r\n            <div className='personalInfocontent'>\r\n            {termsData?.innercontent.map((item) => (\r\n              <div dangerouslySetInnerHTML={{ __html: item }} />\r\n            ))}\r\n            </div>\r\n            <div style={{ width: '100%', textAlign: 'center', }} \r\n                className=\"closeButtonformobile\">\r\n              <button onClick={() => setIsOpen(false)}>Close</button>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n        <Dialog\r\n          className='dialog terms-dialog'\r\n          open={termsOpen}\r\n          onClose={() => setTermsOpen(false)}\r\n        >\r\n          <div className='info_dialog_container'>\r\n            <div className='dialog_grid'>\r\n              <p>\r\n                <span>!</span>\r\n              </p>\r\n\r\n              <h5 className='dialog_p'>\r\n                Oops, please review the following options.\r\n              </h5>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div className='check_option'>\r\n              <img\r\n                src={\r\n                  discountChecked\r\n                    ? '/images/checked_black.svg'\r\n                    : '/images/not_checked_black.svg'\r\n                }\r\n                width='18'\r\n                alt=''\r\n                onClick={() => {\r\n                  updatediscount(!discountChecked);\r\n                  setDiscountChecked(!discountChecked);\r\n                }}\r\n              />\r\n              <strong>Yes!</strong>&nbsp;&nbsp; I would like to receive\r\n              exclusive discounts and offers.\r\n            </div>\r\n            <div className='check_option'>\r\n              <img\r\n                src={\r\n                  dTermsChecked\r\n                    ? '/images/checked_black.svg'\r\n                    : '/images/not_checked_black.svg'\r\n                }\r\n                width='18'\r\n                alt=''\r\n                onClick={() => setDTermsChecked(!dTermsChecked)}\r\n              />\r\n              <strong>Yes!</strong>&nbsp;&nbsp; I agree to the &nbsp;\r\n              {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n              <a\r\n                onClick={() => {\r\n                  setTermsOpen(false);\r\n                  setIsOpen(true);\r\n                }}\r\n              >\r\n                Terms & Conditions.\r\n              </a>{' '}\r\n              *\r\n            </div>\r\n            <div className='info'>\r\n              <small>\r\n                * If you do not accept the terms and conditions, you cannot\r\n                proceed to pose selection and will not appear on the composite.\r\n              </small>\r\n            </div>\r\n            <br />\r\n            {/* <Link to=\"/dont-agree\">\r\n              <a className=\"simulate\">`Simulate I Don't agree`</a>\r\n            </Link> */}\r\n            <button\r\n              className='buttonpopup'\r\n              onClick={handleSubmit(async (data) => {\r\n                console.log('this is data', data);\r\n                sessionStorage.getItem('userData', JSON.stringify(data));\r\n                if (!dTermsChecked) {\r\n                  setDontRedirect(true);\r\n                  return;\r\n                }\r\n                const customerId = sessionStorage.getItem('customerId');\r\n                const organization = sessionStorage.getItem('organization');\r\n\r\n                let aData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <DPC_UpdateAddress xmlns=\"http://tempuri.org/\">\\r\\n      <strNameId>${customerId}</strNameId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <strAddress>${data.address}</strAddress>\\r\\n      <strCity>${data.city}</strCity>\\r\\n      <strZip>${data.zipCode}</strZip>\\r\\n      <strState>${data.state}</strState>\\r\\n      <strBookingPath>${bookingPath}</strBookingPath>\\r\\n    </DPC_UpdateAddress>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n                let uData = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <DPC_UpdateAccountWeb2 xmlns=\"http://tempuri.org/\">\\r\\n      <accountUpdate>\\r\\n        <strFirstName>${data.firstName}</strFirstName>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n        <strLastName2>${data.lastName}</strLastName2>\\r\\n        <strStudentId>${customerId}</strStudentId>\\r\\n        <strGroup>${organization}</strGroup>\\r\\n        <strEmail>${data.email}</strEmail>\\r\\n        <strAltEmail>${data.alternateEmail}</strAltEmail>\\r\\n        <strCellPhoneNo>${data.mobile}</strCellPhoneNo>\\r\\n        <strBookingPath>${data.strBookingPath}</strBookingPath>\\r\\n        <strBookingId>${bookingId}</strBookingId>\\r\\n        <strSqlUpdate>string</strSqlUpdate>\\r\\n        <strMasterBookingUpdate>string</strMasterBookingUpdate>\\r\\n        <IsAttached>true</IsAttached>\\r\\n        <strNotes>string</strNotes>\\r\\n      </accountUpdate>\\r\\n    </DPC_UpdateAccountWeb2>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n                let aConfig = {\r\n                  method: 'post',\r\n                  url: creds.serviceurl,\r\n                  headers: {\r\n                    'Content-Type': 'text/xml; charset=utf-8',\r\n                  },\r\n                  data: aData,\r\n                };\r\n                let uConfig = {\r\n                  method: 'post',\r\n                  url: creds.serviceurl,\r\n                  headers: {\r\n                    'Content-Type': 'text/xml; charset=utf-8',\r\n                  },\r\n                  data: uData,\r\n                };\r\n                axios(aConfig)\r\n                  .then(function (response) {\r\n                    console.log(JSON.stringify(response.data));\r\n                  })\r\n                  .catch(function (error) {\r\n                    console.log(error);\r\n                  });\r\n                axios(uConfig)\r\n                  .then(function (response) {\r\n                    console.log(JSON.stringify(response.data));\r\n                  })\r\n                  .catch(function (error) {\r\n                    console.log(error);\r\n                  });\r\n                // sessionStorage.removeItem(\"userData\");\r\n                setRedirect(true);\r\n              })}\r\n            >\r\n              Continue&nbsp;<i className='fas fa-chevron-right'></i>\r\n              <i className='fas fa-chevron-right'></i>\r\n            </button>\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersionalInfo;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./dontAgree.css\";\n\nconst DontAgree = (props) => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0 });\n  }, []);\n  return (\n    <div className=\"dont_agree_cont\">\n      <div className=\"head\">\n        <div>\n        <Link to=\"/persional-info\">\n          <span>\n            <i className=\"fas fa-chevron-left\"></i>&nbsp;Back\n          </span>\n        </Link>\n        </div>\n      </div>\n      <div className=\"head head2\">\n        <div>\n        \n        </div>\n        <div>\n        <h5 className=\"boldfont\">Oh, no!</h5>\n        </div>\n        <div ></div>\n      </div>\n      <div className=\"body\">\n        <p className=\"boldfont\">\n          We are sorry to hear that you did not accept our Terms & Conditions.\n          We will notify your organization that you do not wish to participate.\n        </p>\n        <br />\n        <p className=\"boldfont\">Change your mind? Click the button below to go back.</p>\n        <br />\n        <br />\n        <div></div>\n        <Link to=\"/persional-info\">\n          <button>\n            <i className=\"fas fa-chevron-left\"></i>\n            <i className=\"fas fa-chevron-left\"></i>&nbsp;Go Back\n          </button>\n        </Link>\n        {/* <p className=\"go-back\">Go back to the previous page</p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default DontAgree;\n","/* eslint-disable */\nimport { Dialog, Slide, useMediaQuery } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport xml2js from 'xml2js';\nimport './favourites.css';\nimport creds from '../../utils/Config.json';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nfunction NextArrow(props) {\n  const { className, style, onClick, currentSlide, slideCount } = props;\n  if (currentSlide + 1 === slideCount) return null;\n  return (\n    <div\n      className={className}\n      style={{\n        ...style,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      onClick={onClick}\n    />\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick, currentSlide } = props;\n  if (currentSlide === 0) return null;\n  return (\n    <div\n      className={className}\n      style={{\n        ...style,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      onClick={onClick}\n    />\n  );\n}\n\nconst Favourites = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isCarouselOpen, setIsCarouselOpen] = useState(false);\n  const [favourites, setFavourites] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [errRedirect, setErrRedirect] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [onlyOne,setonlyOne] = useState(false);\n  const [presentslide,setPresetslide] = useState(null);\n  const [selectedsl,selectedSlide] = useState(0);\n  \n  /// Code added by gourab\n  const [settings ,setsettings] = useState({\n    dots: false,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: <NextArrow />,\n    prevArrow: <PrevArrow />,\n  });\n\n  useEffect(()=>{\n   if(presentslide!=null){\n    presentslide.slickGoTo(selectedsl,false);\n    }\n  },[presentslide]);\n\n  \n\n\n\n\n\n  const matches = useMediaQuery('(max-width:420px)');\n  useEffect(() => {\n    const selecteddata = JSON.parse(sessionStorage.getItem('selectedData'));\n    const customerId = sessionStorage.getItem('customerId');\n    const bookingPath = sessionStorage.getItem('bookingPath');\n    console.log('this is fav', selecteddata);\n    \n\n    const data = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n    <GetRawImagesPS xmlns=\"http://tempuri.org/\">\\r\\n      <strCustomerId>${customerId}</strCustomerId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <strBookingPath>${bookingPath}</strBookingPath>\\r\\n    </GetRawImagesPS>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\n    const config = {\n      method: 'post',\n      url: creds.serviceurl,\n      headers: {\n        'Content-Type': 'text/xml; charset=utf-8',\n      },\n      data: data,\n    };\n    setIsLoading(true);\n    axios(config)\n      .then((res) => {\n        console.log(res.data);\n        const parser = new xml2js.Parser();\n        const str = res.data\n          .split('<GetRawImagesPSResponse xmlns=\"http://tempuri.org/\">')[1]\n          .split('</GetRawImagesPSResponse>')[0];\n        parser.parseString(str, function (err, result) {\n          const favourite = [];\n          result.GetRawImagesPSResult.images[0].string.forEach((ele, i) => {\n            console.log('this is i', i);\n            console.log('this is ele', ele);\n            if (typeof ele == 'string') {\n              favourite[i] = { selected: false };\n              favourite[i].image = ele;\n            }\n          });\n          result.GetRawImagesPSResult.imagesId[0].string.forEach((ele, i) => {\n            // console.log(\"this is ele\",ele);\n            // console.log(\"this is i\",i);\n            if (typeof ele == 'string') {\n              favourite[i].id = ele;\n            }\n          });\n          setIsLoading(false);\n          if (favourite.length) {\n            console.log('this is selected data ', selecteddata);\n            if (selecteddata !== null) {\n              favourite.forEach((fav) => {\n                selecteddata.map((newone) => {\n                  if (newone.id === fav.id) {\n                    fav.selected = newone.selected;\n                    fav.selected = newone.selected;\n                    if (newone.selected === true) {\n                      setIsDisabled(false);\n                    }\n                  }\n                  return null;\n                });\n              });\n            }\n            setFavourites(favourite);\n          } else {\n            setErrRedirect(true);\n          }\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n    console.log(favourites);\n    setTimeout(() => {\n      setIsOpen(true);\n    }, 1000);\n    setTimeout(() => {\n     setIsOpen(false);\n    }, 3500);\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (favourites !== null) {\n      if (favourites.length === 1) {\n        setonlyOne(true);\n      }\n    }\n  }, [favourites]);\n\n  \n  return (\n    <div className='favourites_container'>\n      {redirect && <Redirect to='/selected' />}\n      {errRedirect && <Redirect to='/error' />}\n      <div className='head'>\n        <Link to='/persional-info'>\n          <span>\n            <i className='fas fa-chevron-left'></i>&nbsp;Back\n          </span>\n        </Link>\n        <h5>Select your Favourite pictures</h5>\n        <div></div>\n      </div>\n      <div className='body'>\n        <div className='images_cont'>\n          {isLoading ? (\n            <div className='circle-loader'>\n              <CircularProgress size={60} />\n            </div>\n          ) : (\n            favourites.map((e, i) => (\n              <div key={i} className={`${onlyOne ?  'image  image_one':`image  customimage_${i}` }`} >\n                \n                <div className='photo_fav'>\n                  <img\n                  className='raw_img_fav'\n                    src={'data:image/jpeg;base64,' + e.image}\n                    alt='Photography'\n                  />\n                  <div className='frontcopyright' >\n                    <img src='./images/water_mark.png'  className='frontcopyright_img'  />\n                  </div>\n                </div>\n                {/* <img className=\"photo\" src={e.img} /> */}\n                <p>{e.id}</p>\n                <span\n                  onClick={() => {\n                    const fav = [...favourites];\n                    fav[i].selected = !fav[i].selected;\n                    console.log('favourites', fav);\n                    setFavourites(fav);\n                    const _fav = favourites.filter((e) => e.selected);\n                    if (_fav.length > 0) setIsDisabled(false);\n                    else setIsDisabled(true);\n                  }}\n                >\n                  {e.selected && (\n                    <img\n                      src='/images/heart_fill.svg'\n                      width='30'\n                      height='26'\n                      alt='like'\n                    />\n                  )}\n                  {!e.selected && (\n                    <img\n                      src='/images/heart.svg'\n                      width='30'\n                      height='26'\n                      alt='like'\n                    />\n                  )}\n                </span>\n                <span className='add' onClick={() => {\n                  \n                  setIsCarouselOpen(true);\n\n                  \n                 /* if(presentslide!=null)\n                  presentslide.slickGoTo(i);*/\n\n                  // Code added by Gourab \n\n                  selectedSlide(i);\n                  \n                  \n                  // Code added by Gourab\n                  \n                  }}>\n                  <i className='fas fa-plus'></i>\n                </span>\n              </div>\n            ))\n          )}\n        </div>\n        <br />\n        {!isLoading && (\n          <button\n            disabled={isDisabled}\n            onClick={() => {\n              const data = favourites.filter((e) => e.selected);\n              sessionStorage.setItem('selectedData', JSON.stringify(data));\n              setRedirect(true);\n            }}\n          >\n            Continue&nbsp;<i className='fas fa-chevron-right'></i>\n            <i className='fas fa-chevron-right'></i>\n          </button>\n        )}\n        <div className='cropping' style={{ marginBottom: '65px' }}>\n          <div className='img'>\n            <img src='/images/cropping.png' alt='crop' />\n          </div>\n          <div className='details'>\n            <h6>Cropping & Color correction</h6>\n            <p>\n              Your photo is color corrected, cropped and lightly retouched to\n              ensure a consistent look for the composite.\n            </p>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\n            <a onClick={() => setIsOpen(true)}>CLICK TO LEARN MORE</a>\n          </div>\n        </div>\n        {matches ? (\n          <Dialog\n            className='dialog full_screen custom_style_mobile'\n            fullScreen\n            open={isOpen}\n            onClose={() => setIsOpen(false)}\n            TransitionComponent={Transition}\n          >\n            <div className='dialog_container'>\n              <span onClick={() => setIsOpen(false)} style={{ zIndex: 1 }}>\n                <i className='fas fa-times'></i>\n              </span>\n              <img\n                className='systemimage'\n                src='/images/dialog_content.png'\n                alt='System'\n              />\n              <img\n                className='mobileimage'\n                src='/images/dialog_content1.png'\n                alt='mobile'\n              />\n            </div>\n          </Dialog>\n        ) : (\n          <Dialog\n            className='dialog full_screen'\n            fullScreen\n            open={isOpen}\n            onClose={() => setIsOpen(false)}\n          >\n            <div className='dialog_container'>\n              <span onClick={() => setIsOpen(false)} style={{ zIndex: 1 }}>\n                <i className='fas fa-times'></i>\n              </span>\n              <img\n                className='systemimage'\n                src='/images/dialog_content.png'\n                alt='System'\n              />\n              <img\n                className='mobileimage'\n                src='/images/dialog_content1.png'\n                alt='mobile'\n              />\n            </div>\n          </Dialog>\n        )}\n        <Dialog\n          className='dialog carousel'\n          open={isCarouselOpen}\n          onClose={() => setIsCarouselOpen(false)}\n        >\n          <div className='dialog_container'>\n            <span\n              onClick={() => setIsCarouselOpen(false)}\n              style={{\n                zIndex: 1,\n                height: '35px',\n                background: '#fff',\n                borderRadius: '50%',\n              }}\n            >\n              <i className='far fa-times-circle'></i>\n            </span>\n            <Slider  ref={slider =>{\n\n              setPresetslide(slider);\n\n            }} {...settings}>\n              {favourites.map((e, i) => (\n                <div key={i} className='image'>\n                  <div className='photo full'>\n                    <img\n                      src={'data:image/jpeg;base64,' + e.image}\n                      alt='Phototgraphy'\n                    />\n                   \n                  </div>\n                  <p>{e.id}</p>\n                  <span\n                    onClick={() => {\n                      const fav = [...favourites];\n                      fav[i].selected = !fav[i].selected;\n                      setFavourites(fav);\n                      const _fav = favourites.filter((e) => e.selected);\n                      if (_fav.length > 0) setIsDisabled(false);\n                      else setIsDisabled(true);\n                    }}\n                  >\n                    {e.selected && (\n                      <img\n                        src='/images/heart_fill.svg'\n                        width='30'\n                        height='26'\n                        alt='like'\n                        style={{ zIndex:99999}}\n                      />\n                    )}\n                    {!e.selected && (\n                      <img\n                        src='/images/heart.svg'\n                        width='30'\n                        height='26'\n                        alt='like'\n                        style={{ zIndex:99999}}\n                      />\n                    )}\n                  </span>\n                  {/* <span className=\"add\" onClick={() => setIsCarouselOpen(true)}>\n                    <i className=\"fas fa-plus\"></i>\n                  </span> */}\n                  <div className='frontcopyright2' >\n                    <img src='./images/water_mark.png'  />\n                  </div>\n                </div>\n              ))}\n            </Slider>\n            \n          </div>\n        </Dialog>\n      </div>\n    </div>\n  );\n};\n\nexport default Favourites;\n","/* eslint-disable */\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport \"./selected.css\";\r\nimport xml2js from \"xml2js\";\r\nimport creds from \"../../utils/Config.json\";\r\n//import Emaildata from '../../utils/EmailSms.json';\r\n\r\nfunction NextArrow(props) {\r\n  const { className, style, onClick, currentSlide, slideCount } = props;\r\n  if (currentSlide + 1 === slideCount) return null;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nfunction PrevArrow(props) {\r\n  const { className, style, onClick, currentSlide } = props;\r\n  if (currentSlide === 0) return null;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nconst Selected = ({ data }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isCarouselOpen, setIsCarouselOpen] = useState(false);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [imageSelectionNo, setImageSelectionNo] = useState(1);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirect1, setRedirect1] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [onlyOne, setonlyOne] = useState(false);\r\n\r\n  const [presentslide,setPresetslide] = useState(null);\r\n  const [selectedsl,selectedSlide] = useState(0);\r\n \r\n\r\n  const customerId = sessionStorage.getItem(\"customerId\");\r\n  const bookingId = sessionStorage.getItem(\"strBookingPkid\");\r\n\r\n  var reqData = `<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\\r\\n  <soap:Body>\\r\\n    <GetSuppliersPS xmlns=\"http://tempuri.org/\">\\r\\n      <strCustomerId>${customerId}</strCustomerId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <strFkBookingId>${bookingId}</strFkBookingId>\\r\\n    </GetSuppliersPS>\\r\\n  </soap:Body>\\r\\n</soap:Envelope>`;\r\n\r\n  var config = {\r\n    method: \"post\",\r\n    url: creds.serviceurl,\r\n    headers: {\r\n      \"Content-Type\": \"text/xml; charset=utf-8\",\r\n    },\r\n    data: reqData,\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(presentslide!=null){\r\n     presentslide.slickGoTo(selectedsl,false);\r\n     }\r\n   },[presentslide]);\r\n\r\n\r\n   const [settings ,setsettings] = useState({\r\n    dots: false,\r\n    infinite: false,\r\n   \r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    \r\n    nextArrow: <NextArrow />,\r\n    prevArrow: <PrevArrow />,\r\n  });\r\n\r\n  const [pval,setpval] = useState(\"none\");\r\n  const [cval,setcval] = useState(\"none\");\r\n\r\n  useEffect(()=>{\r\n    //console.log(\"Check data\");\r\n   // console.log(selectedData);\r\n\r\n    setpval(\"none\");\r\n    setcval(\"none\");\r\n\r\n    if (selectedData !== null) {\r\n      selectedData.forEach((newone) => {\r\n        \r\n        \r\n          if (newone.p === true) {\r\n            setpval(newone.id)\r\n          }\r\n\r\n          if (newone.c === true) {\r\n            setcval(newone.id)\r\n          }\r\n       \r\n      });\r\n    }\r\n\r\n  },[selectedData]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const selecteddata = JSON.parse(sessionStorage.getItem(\"selectedImages\"));\r\n    // console.log(\"in selected page\",selecteddata[0]);\r\n    // sessionStorage.removeItem(\"selectedImages\");\r\n    const data = JSON.parse(sessionStorage.getItem(\"selectedData\"));\r\n\r\n    console.log(data);\r\n    data.forEach((ele, index) => {\r\n      ele.c = false;\r\n      ele.p = false;\r\n\r\n      if (selecteddata !== null) {\r\n        selecteddata.forEach((newone) => {\r\n          if (newone.id === ele.id) {\r\n            ele.c = newone.c;\r\n            ele.p = newone.p;\r\n            if (newone.p === true || newone.c === true) {\r\n              setIsDisabled(false);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    setSelectedData(data);\r\n    axios(config)\r\n      .then(function (response) {\r\n        const str = response.data\r\n          .split(\r\n            // eslint-disable-next-line no-useless-escape\r\n            `<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><soap:Body><GetSuppliersPSResponse xmlns=\\\"http://tempuri.org/\\\">`\r\n          )[1]\r\n          .split(\"</GetSuppliersPSResponse>\")[0];\r\n        const parser = new xml2js.Parser();\r\n        parser.parseString(String(str), function (err, result) {\r\n          console.log(result);\r\n          setImageSelectionNo(\r\n            result.GetSuppliersPSResult.nRawImageSelectionNo[0]\r\n          );\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    setTimeout(() => {\r\n      setIsOpen(true);\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      setIsOpen(false);\r\n    }, 3500);\r\n\r\n    window.scrollTo(0, 0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function sendemail() {\r\n    const response2 = JSON.parse(sessionStorage.getItem(\"EmailSms\"));\r\n    const Emaildata = response2.data;\r\n\r\n    const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    var body =\r\n      data.strSessionID.length > 4 ? Emaildata.Bodyforpayment : Emaildata.Body;\r\n    var emaildata =\r\n      '<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n   <SendMail3_S xmlns=\"http://tempuri.org/\">\\r\\n      <strMessage></strMessage>\\r\\n      <strFrom>noreply@dpc.com</strFrom>\\r\\n      <strSendTo>' +\r\n      userData.email +\r\n      \"</strSendTo>\\r\\n      <strSubject>\" +\r\n      Emaildata.Subject +\r\n      \"</strSubject>\\r\\n      <strBody>\\r\\n  \" +\r\n      body +\r\n      \" </strBody>\\r\\n      <strType>Order</strType> \\r\\n      <strCC>\" +\r\n      Emaildata.CC +\r\n      \"</strCC>\\r\\n      <strFkRegisterId>\" +\r\n      data.strPkid +\r\n      \"</strFkRegisterId>\\r\\n      <strAttachmentPaths>\\r\\n       null\\r\\n      </strAttachmentPaths>\\r\\n    </SendMail3_S>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>\";\r\n    emaildata = emaildata.replace(\"<$_Firstname>\", userData.firstName);\r\n    emaildata = emaildata.replace(\"<$_Lastname>\", userData.lastName);\r\n    \r\n    emaildata = emaildata.replace(\"<$_ComposeImage>\", cval);\r\n    emaildata = emaildata.replace(\"<$_PortraitImage>\", pval);\r\n   \r\n    emaildata = emaildata.replace(\r\n      \"<$_StudentCode>\",\r\n      sessionStorage.getItem(\"token\")\r\n    );\r\n    emaildata = emaildata.replace(\r\n      \"<$_StudentOrderId>\",\r\n      sessionStorage.getItem(\"bookingId\")\r\n    );\r\n    emaildata = emaildata.replace(\r\n      \"$_Paymenturl\",\r\n      creds.paymenturl + data.strSessionID\r\n    );\r\n    emaildata = emaildata.replace(\r\n      \"[Paymenturl]\",\r\n      creds.paymenturl + data.strSessionID\r\n    );\r\n    emaildata = emaildata.replace(\r\n      \"<$_loginToken>\",\r\n      `https://localhost:3000/login/${sessionStorage.getItem(\"customerId\")}`\r\n    );\r\n\r\n    // <![CDATA[<div>\\r\\n<img src=\"https://foto-select.herokuapp.com/images/Email_Image.png\" width=\"180\" height=\"70\"/>\\r\\n</div>\\r\\n<br/>\\r\\n<div> Dear &nbsp; <cname> <$_Firstname> <$_Lastname>,\\r\\n<div>\\r\\n<br/>\\r\\n</div>\\r\\n<div>Congratulations !</div>\\r\\n<br/>\\r\\n<div>You have successfully created order with us. Your order details with us are as below. on &nbsp;<a href=\"https://foto-select.herokuapp.com/\">https://foto-select.herokuapp.com/</a>\\r\\n</div>\\r\\n<div>\\r\\n<br/>\\r\\n</div>\\r\\n<div>\\r\\n<sname>Student Code :<span class=\"Apple-tab-span\" style=\"white-space:pre\"> </span><b><font color=\"red\"><$_StudentCode></font>\\r\\n</b></sname>\\r\\n</div>\\r\\n<div><sname>Order Id :<span class=\"Apple-tab-span\" style=\"white-space:pre\"> </span><b><font color=\"red\"><$_StudentOrderId></font></b></sname></div><div><br/></div><div><br/></div><div>click here to <$_loginToken> login</div><br><div>Thank you &nbsp;</div><div><font size=\"4\" color=\"#660066\"><b>Foto-Select</font></b></div></div>]]>\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        \"Content-Type\": \"text/xml; charset=utf-8\",\r\n      },\r\n      data: emaildata,\r\n    };\r\n    axios(config).then((res) => {\r\n      console.log(\"this is the response\", res);\r\n    });\r\n  }\r\n\r\n  function sendsms() {\r\n    const response2 = JSON.parse(sessionStorage.getItem(\"EmailSms\"));\r\n    const Emaildata = response2.data;\r\n\r\n    if (Emaildata.SMS_Activation === \"Always\") {\r\n      const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      var body =\r\n        data.strSessionID.length > 4\r\n          ? Emaildata.Sms_messageforpayment\r\n          : Emaildata.Sms_message;\r\n      var smsdata =\r\n        '<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Body>\\r\\n  <SendSMS xmlns=\"http://tempuri.org/\">\\r\\n <strPhoneNO>91' +\r\n        userData.mobile +\r\n        \"</strPhoneNO>\\r\\n <strSMS>\" +\r\n        body +\r\n        \"</strSMS>\\r\\n </SendSMS>\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>\";\r\n      smsdata = smsdata.replace(\"<$_Firstname>\", userData.firstName);\r\n      smsdata = smsdata.replace(\"<$_Lastname>\", userData.lastName);\r\n      smsdata = smsdata.replace(\r\n        \"<$_StudentCode>\",\r\n        sessionStorage.getItem(\"token\")\r\n      );\r\n      smsdata = smsdata.replace(\"<$_Sessionid>\", data.strSessionID);\r\n      smsdata = smsdata.replace(\r\n        \"<$_Paymenturl>\",\r\n        creds.paymenturl + data.strSessionID\r\n      );\r\n      smsdata = smsdata.replace(\r\n        \"<$_loginToken>\",\r\n        `http://localhost:3000/login?token=${sessionStorage.getItem(\"token\")}`\r\n      );\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: creds.serviceurl,\r\n        headers: {\r\n          \"Content-Type\": \"text/xml; charset=utf-8\",\r\n        },\r\n        data: smsdata,\r\n      };\r\n      axios(config).then((res) => {\r\n        console.log(\"this is the response\", res);\r\n      });\r\n    }\r\n  }\r\n\r\n  const submitSelectedImages = () => {\r\n    let reqData;\r\n    let cid;\r\n    let pid;\r\n    const selectedImages = [];\r\n    if (Number(imageSelectionNo) > 1) {\r\n      const cData = selectedData.filter((e) => e.c)[0];\r\n      const pData = selectedData.filter((e) => e.p)[0];\r\n      selectedImages.push(cData);\r\n      selectedImages.push(pData);\r\n      cid = cData.id;\r\n      pid = pData.id;\r\n      reqData = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\\r\\n<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\\r\\n  <soap:Body>\\r\\n   <AddUserSelectedImages_DPC xmlns=\"http://tempuri.org/\">\\r\\n      <strFkRegisterId>${data.strPkid}</strFkRegisterId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <strUserId>${customerId}</strUserId>\\r\\n      <listImageIds>\\r\\n        <string>${cid}</string>\\r\\n        <string>${pid}</string>\\r\\n      </listImageIds>\\r\\n      <nNoOfImages>${imageSelectionNo}</nNoOfImages>\\r\\n    </AddUserSelectedImages_DPC>\\r\\n  </soap:Body>\\r\\n</soap:Envelope>`;\r\n    } else {\r\n      const cData = selectedData.filter((e) => e.c)[0];\r\n      selectedImages.push(cData);\r\n      cid = cData.id;\r\n      reqData = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\\r\\n<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\\r\\n  <soap:Body>\\r\\n   <AddUserSelectedImages_DPC xmlns=\"http://tempuri.org/\">\\r\\n      <strFkRegisterId>${data.strPkid}</strFkRegisterId>\\r\\n      <strUserId>${customerId}</strUserId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <listImageIds>\\r\\n        <string>${cid}</string>\\r\\n      </listImageIds>\\r\\n      <nNoOfImages>${imageSelectionNo}</nNoOfImages>\\r\\n    </AddUserSelectedImages_DPC>\\r\\n  </soap:Body>\\r\\n</soap:Envelope>`;\r\n    }\r\n    console.log(selectedImages);\r\n    sessionStorage.setItem(\"selectedImages\", JSON.stringify(selectedImages));\r\n    var config = {\r\n      method: \"post\",\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        \"Content-Type\": \"text/xml; charset=utf-8\",\r\n      },\r\n      data: reqData,\r\n    };\r\n    axios(config)\r\n      .then(function (response) {\r\n        sendemail();\r\n        sendsms();\r\n        console.log(JSON.stringify(response.data));\r\n        if (data.strSessionID.length > 4) {\r\n          setRedirect(true);\r\n        } else {\r\n          setRedirect1(true);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onCClick = (index) => {\r\n    const data = [...selectedData];\r\n    data.forEach((e, i) => {\r\n      if (i === index) {\r\n        e.c = true;\r\n      } else {\r\n        e.c = false;\r\n      }\r\n    });\r\n    setSelectedData(data);\r\n    if (imageSelectionNo > 1) {\r\n      const _sData = selectedData.filter((e) => e.p);\r\n      if (_sData.length > 0) setIsDisabled(false);\r\n      else setIsDisabled(true);\r\n    } else {\r\n      setIsDisabled(false);\r\n    }\r\n  };\r\n\r\n  const onPClick = (index) => {\r\n    const data = [...selectedData];\r\n    data.forEach((e, i) => {\r\n      if (i === index) {\r\n        e.p = true;\r\n      } else {\r\n        e.p = false;\r\n      }\r\n    });\r\n    setSelectedData(data);\r\n    const _sData = selectedData.filter((e) => e.c);\r\n    if (_sData.length > 0) setIsDisabled(false);\r\n    else setIsDisabled(true);\r\n  };\r\n\r\n  const showInfo = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedData !== null) {\r\n      if (selectedData.length === 1) {\r\n        setonlyOne(true);\r\n      }\r\n    }\r\n  }, [selectedData]);\r\n  return (\r\n    <div className=\"selected_container\">\r\n      {redirect && <Redirect to=\"/forward\" />}\r\n      {redirect1 && <Redirect to=\"/completed\" />}\r\n      <div className=\"head\">\r\n        <Link to=\"/favourites\">\r\n          <span className=\"back\">\r\n            <i className=\"fas fa-chevron-left\"></i>&nbsp;Back\r\n          </span>\r\n        </Link>\r\n        <h5>Finalize Your Selection</h5>\r\n        <div></div>\r\n        <div className=\"info\" onClick={() => showInfo()}>\r\n          <span>?</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"body\">\r\n        <div className=\"images_cont\" style={{ marginBottom: \"50px\" }}>\r\n          {selectedData.map((e, i) => (\r\n            <div\r\n              key={e.name}\r\n              className={`${\r\n                onlyOne ? \"image  image_one\" : `image  customimage_${i}`\r\n              }`}\r\n            >\r\n              <div className='photo_sel'>\r\n                <img\r\n                className=\"raw_img_sel\"\r\n                  src={\"data:image/jpeg;base64,\" + e.image}\r\n                  alt=\"Photography\"\r\n                />\r\n                 <div className='frontcopyright_sel' >\r\n                    <img src='./images/water_mark.png' className='frontcopyright_img_sel' />\r\n                  </div>\r\n              </div>\r\n              <p>{e.id}</p>\r\n              <div\r\n                className={e.c ? \"comp_port active\" : \"comp_port\"}\r\n                onClick={() => {\r\n                  onCClick(i);\r\n                }}\r\n              >\r\n                <span className=\"boldfont\">C</span>\r\n              </div>\r\n              {Number(imageSelectionNo) > 1 && (\r\n                <div\r\n                  className={\r\n                    e.p ? \"comp_port reverse active\" : \"comp_port reverse\"\r\n                  }\r\n                  onClick={() => {\r\n                    onPClick(i);\r\n                  }}\r\n                >\r\n                  <span className=\"boldfont\">P</span>\r\n                </div>\r\n              )}\r\n              <span className=\"add\" onClick={() =>{\r\n                setIsCarouselOpen(true);\r\n                \r\n                selectedSlide(i);\r\n\r\n              } }>\r\n                <i className=\"fas fa-plus\"></i>\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <br />\r\n        <button onClick={() => submitSelectedImages()} disabled={isDisabled}>\r\n          Continue&nbsp;<i className=\"fas fa-chevron-right\"></i>\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n        {/* <Link to=\"/forward\">\r\n        </Link> */}\r\n        {/* <p style={{ marginTop: \"20px\", fontSize: \"18px\", color: \"#333\" }}>\r\n          Click here to simulate payment <br /> flag set\r\n        </p> */}\r\n        <Dialog\r\n          className=\"dialog select widthmax\"\r\n          open={isOpen}\r\n          onClose={() => setIsOpen(false)}\r\n        >\r\n          <div className=\"dialog_cont\">\r\n            <div className=\"close\" onClick={() => setIsOpen(false)}>\r\n              <span>X</span>\r\n            </div>\r\n            <h5 className=\"boldfont\" style={{ paddingTop: \"25px\" }}>\r\n              Selecting Poses\r\n            </h5>\r\n            {Number(imageSelectionNo) > 1 && (\r\n              <p style={{ margin: \"auto 10%\" }}>\r\n                Select the pose you want for your{\" \"}\r\n                <strong className=\"boldfont\">Portait</strong> and{\" \"}\r\n                <strong className=\"boldfont\">Composite</strong> using the\r\n                button.\r\n              </p>\r\n            )}\r\n            {Number(imageSelectionNo) === 1 && (\r\n              <p style={{ margin: \"auto 10%\" }}>\r\n                Select the pose you want for your{\" \"}\r\n                <strong className=\"boldfont\">Composite</strong> using the\r\n                button.\r\n              </p>\r\n            )}\r\n            <div className=\"com_por\">\r\n              <div className=\"com\">\r\n                <p className=\"letter boldfont\">C</p>\r\n                <h6>Composite</h6>\r\n                <p className=\"desc\">Appears on group composite</p>\r\n              </div>\r\n              {Number(imageSelectionNo) > 1 && (\r\n                <div className=\"por\">\r\n                  <p className=\"letter boldfont\">P</p>\r\n                  <h6>Portrait</h6>\r\n                  <p className=\"desc\">Available online for ordering</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n        <Dialog\r\n          className=\"dialog carousel\"\r\n          open={isCarouselOpen}\r\n          onClose={() => setIsCarouselOpen(false)}\r\n        >\r\n          <div className=\"dialog_conta\">\r\n            <span\r\n              onClick={() => setIsCarouselOpen(false)}\r\n              style={{\r\n                zIndex: 1,\r\n                height: \"24px\",\r\n                background: \"#fff\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            >\r\n              <i className=\"far fa-times-circle\"></i>\r\n            </span>\r\n            <Slider\r\n              ref={(slider) => {\r\n                setPresetslide(slider);\r\n              }}\r\n              {...settings}\r\n            >\r\n              {selectedData.map((e, i) => (\r\n                <div className=\"image\" key=\"e.id\">\r\n                  <div className=\"photo full\">\r\n                    <img\r\n                      src={\"data:image/jpeg;base64,\" + e.image}\r\n                      alt=\"Photography\"\r\n                    />\r\n                  </div>\r\n                  <p>{e.id}</p>\r\n                  <div\r\n                    className={e.c ? \"comp_port active\" : \"comp_port\"}\r\n                    onClick={() => {\r\n                      onCClick(i);\r\n                    }}\r\n                  >\r\n                    <span className=\"letter boldfont\">C</span>\r\n                  </div>\r\n                  {Number(imageSelectionNo) > 1 && (\r\n                    <div\r\n                      className={\r\n                        e.p ? \"comp_port reverse active\" : \"comp_port reverse\"\r\n                      }\r\n                      onClick={() => {\r\n                        onPClick(i);\r\n                      }}\r\n                    >\r\n                      <span className=\"letter boldfont\">P</span>\r\n                    </div>\r\n                  )}\r\n                  {/* <span className=\"add\" onClick={() => setIsCarouselOpen(true)}>\r\n                    <i className=\"fas fa-plus\"></i>\r\n                  </span> */}\r\n                   <div className='frontcopyright_sele2' >\r\n                    <img src='./images/water_mark.png'  />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Selected;\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/header/header\";\r\nimport Welcome from \"./routes/welcome/welcome\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport CheckDetails from \"./routes/checkDetails/checkDetails\";\r\nimport PersionalInfo from \"./routes/persionalInfo/persionalInfo\";\r\nimport DontAgree from \"./routes/dontAgree/dontAgree\";\r\nimport Favourites from \"./routes/favourites/favourites\";\r\nimport Selected from \"./routes/selected/selected\";\r\nimport ForwardToPayment from \"./routes/forwardToPayment/forwardToPayment\";\r\nimport Completed from \"./routes/completed/completed\";\r\nimport axios from \"axios\";\r\nimport xml2js from \"xml2js\";\r\nimport LoginError from \"./routes/loginError/loginError\";\r\nimport creds from \"./utils/Config.json\";\r\nimport LoginErrorCustom from \"./routes/loginError/loginErrorCustom\";\r\n\r\n//Prakash Start addition\r\n//const token = sessionStorage.getItem('token');\r\nlet token;\r\nconst query = new URLSearchParams(window.location.search);\r\nif (query.get(\"token\")) {\r\n  token = query.get(\"token\");\r\n  sessionStorage.setItem(\"urltoken\", query.get(\"token\"));\r\n  sessionStorage.setItem(\"token\", query.get(\"token\"));\r\n  \r\n}\r\n//Prakash end\r\n\r\n\r\n//Code added By Gourab\r\nconst loadJsonFrom = async (filename,dataname) => {\r\n  let res = await axios.get(\r\n    window.location.protocol + \"/mySettings/\" + filename\r\n  );\r\n\r\n  sessionStorage.setItem(dataname, JSON.stringify(res));\r\n  localStorage.setItem(dataname,JSON.stringify(res))\r\n  return true;\r\n};\r\n//Code added By Gourab\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({});\r\n  const [errRedirect, setErrRedirect] = useState(false);\r\n  const [redirectWellcome, setredirectWellcome] = useState(false);\r\n  const [errRedirectCustom, setErrRedirectCustom] = useState(false);\r\n \r\n  \r\n  const [jsonLoaded,setjsonLoaded] = useState(false);\r\n  \r\n  const [CustomerId,setCustomerId] = useState(null);\r\n\r\n // const jsonnames = [\"BookingStatusLookup.json\",\"Config.json\",\"EmailSms.json\",\"OrgFilterChapterInfo.json\",\"TermsAndConditions.json\"];\r\n\r\n\r\n  \r\n useEffect(() => {\r\n\r\n  //console.log(\"This load once 1\");\r\n\r\n\r\n  let rval = loadJsonFrom(\"BookingStatusLookup.json\",\"BookingStatusLookup\");\r\n  if(rval){\r\n    console.log(\"This load once A1 \");\r\n   // console.log(sessionStorage.getItem(\"BookingStatusLookup\"));\r\n   //console.log(localStorage.getItem(\"BookingStatusLookup\"));\r\n    //rval =  loadJsonFrom(\"Config.json\",\"Config\");\r\n    if(rval){\r\n     \r\n      rval =  loadJsonFrom(\"EmailSms.json\",\"EmailSms\");\r\n      if(rval){\r\n        rval =  loadJsonFrom(\"OrgFilterChapterInfo.json\",\"OrgFilterChapterInfo\");\r\n        if(rval){\r\n          rval =  loadJsonFrom(\"TermsAndConditions.json\",\"TermsAndConditions\");\r\n          setjsonLoaded(true);\r\n        }\r\n      }\r\n    }\r\n  \r\n  }\r\n\r\n}, []);\r\n  useEffect(() => {\r\n\r\n  if(jsonLoaded){\r\n\r\n   \r\n    \r\n\r\n    if (!query.get(\"token\")) {\r\n      sessionStorage.removeItem(\"token\");\r\n    }\r\n    sessionStorage.removeItem(\"customerId\");\r\n    sessionStorage.removeItem(\"organization\");\r\n    sessionStorage.removeItem(\"selectedData\");\r\n    sessionStorage.removeItem(\"bookingPath\");\r\n    sessionStorage.removeItem(\"bookingId\");\r\n    sessionStorage.removeItem(\"strBookingPkid\");\r\n    sessionStorage.removeItem(\"userData\");\r\n    sessionStorage.removeItem(\"selectedImages\");\r\n    sessionStorage.removeItem(\"radiooption\");\r\n    sessionStorage.removeItem(\"selectedvalue\");\r\n    sessionStorage.removeItem(\"textvalue\");\r\n\r\n    //const query = new URLSearchParams(window.location.search);\r\n    console.log(sessionStorage.getItem(\"urltoken\"));\r\n    if (\r\n      !query.get(\"token\") &&\r\n      (sessionStorage.getItem(\"urltoken\") === undefined ||\r\n        sessionStorage.getItem(\"urltoken\") === null)\r\n    ) {\r\n      setErrRedirect(true);\r\n      return;\r\n    } else {\r\n      sessionStorage.setItem(\"urltoken\", query.get(\"token\"));\r\n    }\r\n\r\n    let data = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n  <soap12:Header>\\r\\n    <AuthHeader xmlns=\"http://tempuri.org/\">\\r\\n      <LoginToken>${\r\n      query.get(\"token\") || token\r\n    }</LoginToken>\\r\\n      <Username>${\r\n      creds.username\r\n    }</Username>\\r\\n      <Password>${\r\n      creds.password\r\n    }</Password>\\r\\n    </AuthHeader>\\r\\n  </soap12:Header>\\r\\n  <soap12:Body>\\r\\n    <LoginByToken3 xmlns=\"http://tempuri.org/\" />\\r\\n  </soap12:Body>\\r\\n</soap12:Envelope>`;\r\n    let config = {\r\n      method: \"post\",\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        \"Content-Type\": \"text/xml; charset=utf-8\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then((response) => {\r\n        let parser = new xml2js.Parser();\r\n        parser.parseString(`${response.data}`, function (err, result) {\r\n          const resultData =\r\n            result[\"soap:Envelope\"][\"soap:Body\"][0][\"LoginByToken3Response\"][0][\r\n              \"LoginByToken3Result\"\r\n            ][0];\r\n          const ObjectKeys = Object.keys(resultData);\r\n          let _data = {};\r\n          ObjectKeys.forEach((e) => {\r\n            _data[e] = resultData[e][0];\r\n          });\r\n          setData(_data);\r\n          sessionStorage.setItem(\"token\", _data.strToken);\r\n          sessionStorage.setItem(\"customerId\", _data.strCustomerId);\r\n          console.log(_data);\r\n          //Added By Gourab\r\n          setCustomerId(_data.strCustomerId);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setErrRedirect(true);\r\n      });\r\n\r\n    }\r\n  }, [jsonLoaded]);\r\n\r\n  useEffect(() => {\r\n\r\n    \r\n\r\n    let data1 = `<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\\r\\n\r\n    <soap12:Body>\\r\\n\r\n      <GetBookingInfoPS xmlns=\"http://tempuri.org/\">\\r\\n \r\n          <strCustomerId>${CustomerId}</strCustomerId>\\r\\n \r\n      </GetBookingInfoPS>\\r\\n \r\n    </soap12:Body>\\r\\n\r\n  </soap12:Envelope>`;\r\n\r\n    let config1 = {\r\n      method: \"post\",\r\n      url: creds.serviceurl,\r\n      headers: {\r\n        \"Content-Type\": \"text/xml; charset=utf-8\",\r\n      },\r\n      data: data1,\r\n    };\r\n\r\n    axios(config1)\r\n      .then((response) => {\r\n        let parser1 = new xml2js.Parser();\r\n        parser1.parseString(`${response.data}`, function (err, result) {\r\n          const resultData1 =\r\n            result[\"soap:Envelope\"][\"soap:Body\"][0][\r\n              \"GetBookingInfoPSResponse\"\r\n            ][0][\"GetBookingInfoPSResult\"][0];\r\n          const ObjectKeys1 = Object.keys(resultData1);\r\n          let _data = {};\r\n          ObjectKeys1.forEach((e) => {\r\n            _data[e] = resultData1[e][0];\r\n          });\r\n\r\n\r\n         \r\n          sessionStorage.setItem(\"strStatus\", _data.strStatus);\r\n       \r\n          /// Code added by Gourab\r\n        const response2 = JSON.parse(sessionStorage.getItem(\"BookingStatusLookup\")); \r\n\r\n       \r\n        let  statusData = response2.data[_data.strStatus];\r\n\r\n        if(statusData === undefined){\r\n          return;\r\n        }\r\n  \r\n  \r\n    const statusDat = statusData.value;\r\n        if (statusDat === \"Active\") {\r\n          sessionStorage.setItem(\r\n            \"htmlcontent\",\r\n            JSON.stringify(statusData)\r\n          );\r\n          setredirectWellcome(true);\r\n          setErrRedirect(false);\r\n          setErrRedirectCustom(false);\r\n        }\r\n\r\n        if (statusDat === \"Error\") {\r\n\r\n          sessionStorage.setItem(\r\n            \"htmlcontent\",\r\n            JSON.stringify(statusData)\r\n          );\r\n\r\n         \r\n          setredirectWellcome(false);\r\n          setErrRedirectCustom(true);\r\n          setErrRedirect(false);\r\n        }\r\n\r\n         /// Code added by Gourab\r\n\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n       setErrRedirect(true);\r\n      });\r\n  }, [CustomerId]);\r\n\r\n\r\n\r\n  return (\r\n    <Router>\r\n      \r\n      {errRedirect && jsonLoaded && <Redirect to=\"/error\" />}\r\n      {redirectWellcome && jsonLoaded && <Redirect to=\"/welcome\" />}\r\n      {errRedirectCustom && jsonLoaded && <Redirect to=\"/errorpage\" />}\r\n     \r\n      \r\n       {jsonLoaded && \r\n      <div className=\"App\">\r\n        <div className=\"header\">\r\n          <Header />\r\n        </div>\r\n        <div className=\"body\">\r\n        <Route path=\"/errorpage\" exact>\r\n            <LoginErrorCustom data={data}  />\r\n          </Route>\r\n          <Route path=\"/welcome\" exact>\r\n            <Welcome data={data} />\r\n          </Route>\r\n          <Route path=\"/login\" exact>\r\n            <Welcome data={data} />\r\n          </Route>\r\n          <Route path=\"/check-details\" exact>\r\n            <CheckDetails data={data} />\r\n          </Route>\r\n          <Route path=\"/persional-info\" exact>\r\n            <PersionalInfo data={data} />\r\n          </Route>\r\n          <Route path=\"/dont-agree\" exact>\r\n            <DontAgree data={data} />\r\n          </Route>\r\n          <Route exact path=\"/favourites\">\r\n            <Favourites data={data} />\r\n          </Route>\r\n          <Route exact path=\"/selected\">\r\n            <Selected data={data} />\r\n          </Route>\r\n          <Route exact path=\"/forward\">\r\n            <ForwardToPayment data={data} />\r\n          </Route>\r\n          <Route exact path=\"/completed\">\r\n            <Completed data={data} />\r\n          </Route>\r\n          <Route exact path=\"/error\" component={LoginError}></Route>\r\n        </div>\r\n      </div>\r\n}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable */\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './forwardToPayment.css';\nimport xml2js from 'xml2js';\nimport axios from 'axios';\nimport creds from '../../utils/Config.json';\n\nconst ForwardToPayment = ({ data }) => {\n  const [imageSelectionNo, setImageSelectionNo] = useState(1);\n  const [selectedImages, setSelectedImages] = useState([]);\n  \n\n  const customerId = sessionStorage.getItem('customerId');\n  const bookingId = sessionStorage.getItem('strBookingPkid');\n  var reqData = `<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\\r\\n  <soap:Body>\\r\\n    <GetSuppliersPS xmlns=\"http://tempuri.org/\">\\r\\n      <strCustomerId>${customerId}</strCustomerId>\\r\\n      <strFkBookingId>${bookingId}</strFkBookingId>\\r\\n    </GetSuppliersPS>\\r\\n  </soap:Body>\\r\\n</soap:Envelope>`;\n  var config = {\n    method: 'post',\n    url: creds.serviceurl,\n    headers: {\n      'Content-Type': 'text/xml; charset=utf-8',\n    },\n    data: reqData,\n  };\n\n  var idata = `<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\\r\\n  <soap:Body>\\r\\n    <GetUserSelectedImage_DPC xmlns=\"http://tempuri.org/\">\\r\\n      <strFkRegisterId>${data.strPkid}</strFkRegisterId>\\r\\n      <Username>${creds.username}</Username>\\r\\n      <Password>${creds.password}</Password>\\r\\n      <strUserId>${customerId}</strUserId>\\r\\n    </GetUserSelectedImage_DPC>\\r\\n  </soap:Body>\\r\\n</soap:Envelope>`;\n  var iconfig = {\n    method: 'post',\n    url: creds.serviceurl,\n    headers: {\n      'Content-Type': 'text/xml; charset=utf-8',\n    },\n    data: idata,\n  };\n\n  useEffect(() => {\n    const _selectedImages = JSON.parse(\n      sessionStorage.getItem('selectedImages')\n    );\n    setSelectedImages(_selectedImages);\n    axios(config)\n      .then(function (response) {\n        const str = response.data\n          .split(\n            // eslint-disable-next-line no-useless-escape\n            `<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><soap:Body><GetSuppliersPSResponse xmlns=\\\"http://tempuri.org/\\\">`\n          )[1]\n          .split('</GetSuppliersPSResponse>')[0];\n        const parser = new xml2js.Parser();\n        parser.parseString(String(str), function (err, result) {\n          console.log(result.GetSuppliersPSResult.nRawImageSelectionNo[0]);\n          setImageSelectionNo(\n            result.GetSuppliersPSResult.nRawImageSelectionNo[0]\n          );\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios(iconfig)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='forward_container'>\n      <div className='head'>\n        <Link to='/selected'>\n          <span>\n            <i className='fas fa-chevron-left'></i>&nbsp;Back\n          </span>\n        </Link>\n        <h5>Great Job!</h5>\n        <div style={{ width: '95px' }}></div>\n      </div>\n      <div className='body'>\n        <h6>Your sitting fee is required</h6>\n        <br />\n        <p style={{ fontSize: '22px' }} className='paymentmsgmobile'>\n          Payment is due today! Late payments will incur extra fees.\n        </p>\n        {/* <Link to=\"/completed\"> */}\n        <a href={creds.paymenturl + data.strSessionID}>\n          <button>Proceed to Payment</button>\n        </a>\n        {/* </Link> */}\n        <div className='cp_container'>\n          <div  className={`comp  customimage_0`}>\n            <div className='details rightmargin'>\n              <div\n                className='content'\n                style={{ background: 'white', maxWidth: '225px' }}\n              >\n                Your chosen <br />\n                <span style={{ color: '#82ca78' }}>composite pose</span> will\n                appear on the group composite.\n              </div>\n              <br />\n              <img src='/images/arrow_green.svg' alt='arrow' />\n            </div>\n            <div className='image'>\n              {selectedImages.length ? (\n                <img\n                  src={'data:image/jpeg;base64,' + selectedImages[0]?.image}\n                  alt='Photography'\n                  className='this_finalimage'\n                />\n              ) : (\n                <img src='' alt='None' />\n              )}\n                { true && \n              <div className='frontcopyright_for' >\n                    <img src='./images/water_mark.png' className='frontcopyright_img_for' />\n                  </div>\n               }\n              <span className='boldfont'>C</span>\n              <p>{selectedImages[0]?.id}</p>\n            </div>\n          </div>\n          {Number(imageSelectionNo) > 1 && (\n            <div className='port' className={`port  final_customimage_1`}>\n              <div className='image'>\n                {selectedImages.length ? (\n                  <img\n                    src={'data:image/jpeg;base64,' + selectedImages[1]?.image}\n                    alt='Photography'\n                    className='this_finalimage'\n                  />\n                  \n                ) : (\n                  <img src='' alt='None' />\n                )}\n                { true && \n                 <div className='frontcopyright_for' >\n                    <img src='./images/water_mark.png' className='frontcopyright_img_for' />\n                  </div>\n                 }\n                <span className='boldfont'>P</span>\n                <p>{selectedImages[1]?.id}</p>\n              </div>\n              <div className='details leftmargin'>\n                <img\n                  src='/images/arrow_blue.svg'\n                  alt='arrow'\n                  style={{ alignSelf: 'flex-start', height: '110px' }}\n                />\n                <br />\n                <div\n                  className='content anothe_last'\n                  style={{ background: 'white', maxWidth: '225px' }}\n                >\n                  In 2-4 weeks you’ll receive an e-mail to order your chosen\n                  <wbr></wbr>\n                  <span style={{ color: '#7cbddd' }}>portrait pose</span>{' '}\n                  online.\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <p style={{ fontSize: '22px' }} className='paymentmsg'>\n          Payment is due today! Late payments wil incur extra fees.\n        </p>\n        <div className='cropping cropping1 bottommargin'>\n          <div className='img'>\n            <img src='/images/camera.png' alt='camera' />\n          </div>\n          <div className='details width25'>\n            <h6>We will take it from here</h6>\n            <p style={{ textAlign: 'center' }}>\n              Our expert team will get to work retouching and color correcting\n              your photo so you look your best.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForwardToPayment;\n","/* eslint-disable */\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport xml2js from 'xml2js';\nimport './completed.css';\nimport creds from '../../utils/Config.json';\n\nconst Completed = ({ data }) => {\n  console.log('this is the completed data', data);\n  const [selectedImages, setSelectedImages] = useState([]);\n  // console.log(\"This is the selected Images data\",_selectedImages);\n  const [imageSelectionNo, setImageSelectionNo] = useState(1);\n  const customerId = sessionStorage.getItem('customerId');\n  const bookingId = sessionStorage.getItem('strBookingPkid');\n  \n  var reqData = `<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\\r\\n  <soap:Body>\\r\\n    <GetSuppliersPS xmlns=\"http://tempuri.org/\">\\r\\n      <strCustomerId>${customerId}</strCustomerId>\\r\\n      <strFkBookingId>${bookingId}</strFkBookingId>\\r\\n    </GetSuppliersPS>\\r\\n  </soap:Body>\\r\\n</soap:Envelope>`;\n\n  var config = {\n    method: 'post',\n    url: creds.serviceurl,\n    headers: {\n      'Content-Type': 'text/xml; charset=utf-8',\n    },\n    data: reqData,\n  };\n\n  useEffect(() => {\n    const _selectedImages = JSON.parse(\n      sessionStorage.getItem('selectedImages')\n    );\n    setSelectedImages(_selectedImages);\n    axios(config)\n      .then(function (response) {\n        const str = response.data\n          .split(\n            // eslint-disable-next-line no-useless-escape\n            `<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><soap:Body><GetSuppliersPSResponse xmlns=\\\"http://tempuri.org/\\\">`\n          )[1]\n          .split('</GetSuppliersPSResponse>')[0];\n        const parser = new xml2js.Parser();\n        parser.parseString(String(str), function (err, result) {\n          console.log(result.GetSuppliersPSResult.nRawImageSelectionNo[0]);\n          setImageSelectionNo(\n            result.GetSuppliersPSResult.nRawImageSelectionNo[0]\n          );\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='completed_container'>\n      <div className='head'>\n        <h5 style={{ fontSize: '40px' }}>Thank You!</h5>\n      </div>\n      <div className='body'>\n        <p className='have_que'>\n          Have a question? Contact us at (815) 363-2800 or www.dpcpix.com\n        </p>\n        <div className='cp_container'>\n          <div className='comp'>\n            <div className='details'>\n              <div\n                className='content'\n                style={{ background: 'white', maxWidth: '225px' }}\n              >\n                Your chosen <br />\n                <span style={{ color: '#82ca78' }}>composite pose</span> will\n                appear on the group composite.\n              </div>\n              <br />\n              <img src='/images/arrow_green.svg' alt='arrow' />\n            </div>\n            <div className='image'>\n              <img\n                src={'data:image/jpeg;base64,' + selectedImages[0]?.image}\n                alt=''\n              />\n              <span className='boldfont' style={{ fontSize: '75px' }}>\n                C\n              </span>\n              <p>{selectedImages[0]?.id}</p>\n            </div>\n          </div>\n          {Number(imageSelectionNo) > 1 && (\n            <div className='port'>\n              <div className='image'>\n                <img\n                  src={'data:image/jpeg;base64,' + selectedImages[1]?.image}\n                  alt=''\n                />\n                <span className='boldfont' style={{ fontSize: '75px' }}>\n                  P\n                </span>\n                <p>{selectedImages[1]?.id}</p>\n              </div>\n              <div className='details'>\n                <img\n                  src='/images/arrow_blue.svg'\n                  alt='arrow'\n                  style={{ alignSelf: 'flex-start', height: '110px' }}\n                />\n                <br />\n                <div\n                  className='content'\n                  style={{ background: 'white', maxWidth: '225px' }}\n                >\n                  In 2-4 weeks you’ll receive an e-mail to order your chosen\n                  <wbr></wbr>\n                  <span style={{ color: '#7cbddd' }}>portrait pose</span>{' '}\n                  online.\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className='cropping'>\n          <div className='img'>\n            <img src='/images/camera.png' alt='camera' />\n          </div>\n          <div className='details'>\n            <h6>We will take it from here</h6>\n            <p>\n              Our expert team will get to work retouching and color correcting\n              your photo so you look your best.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Completed;\n","/* eslint-disable */\nimport \"./loginError.css\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst LoginError = (props) => {\n  \n\n  useEffect(() => {\n    let htmlcontent = sessionStorage.getItem(\"htmlcontent\");\n\n    \n    \n    if (htmlcontent) {\n       htmlcontent = JSON.parse(sessionStorage.getItem(\"htmlcontent\"));\n      if (htmlcontent.display === \"on\") {\n        var value = htmlcontent.htmlcontent;\n\n        document.getElementById(\"content\").innerHTML = \"\";\n\n        for (let i = 0; i < value.length; i++) {\n          document.getElementById(\"content\").innerHTML += value[i];\n        }\n      }\n    }\n   \n    \n  }, []);\n\n  return (\n    <div className=\"error_cont\">\n      <div className=\"head\">\n        <div></div>\n        <h5>Oh, no!</h5>\n        <div></div>\n      </div>\n      <div className=\"body\" id=\"content\">\n        <p>Check back soon, your photos are not quite ready. Thanks!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginError;\n","/* eslint-disable */\nimport \"./loginError.css\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst LoginErrorCustom = (props) => {\n  \n\n  useEffect(() => {\n    let htmlcontent = sessionStorage.getItem(\"htmlcontent\");\n\n    \n    \n    if (htmlcontent) {\n       htmlcontent = JSON.parse(sessionStorage.getItem(\"htmlcontent\"));\n      if (htmlcontent.display === \"on\") {\n        var value = htmlcontent.htmlcontent;\n\n        document.getElementById(\"content\").innerHTML = \"\";\n\n        for (let i = 0; i < value.length; i++) {\n          document.getElementById(\"content\").innerHTML += value[i];\n        }\n      }\n    }\n   \n    \n  }, []);\n\n  return (\n    <div className=\"error_cont\">\n      <div className=\"head\">\n        <div></div>\n        <h5>Oh, no!</h5>\n        <div></div>\n      </div>\n      <div className=\"body\" id=\"content\">\n        <p>Check back soon, your photos are not quite ready. Thanks!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginErrorCustom;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n// console.log = ()=>{};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}